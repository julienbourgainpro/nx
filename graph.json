{
  "graph": {
    "nodes": {
      "linux-arm-gnueabihf": {
        "name": "linux-arm-gnueabihf",
        "type": "lib",
        "data": {
          "root": "packages/nx/native-packages/linux-arm-gnueabihf",
          "name": "linux-arm-gnueabihf",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-linux-arm-gnueabihf",
              "packageMain": "nx.linux-arm-gnueabihf.node",
              "isInPackageManagerWorkspaces": false
            },
            "jsPackageName": "@nx/nx-linux-arm-gnueabihf"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/linux-arm-gnueabihf"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      },
      "linux-arm64-musl": {
        "name": "linux-arm64-musl",
        "type": "lib",
        "data": {
          "root": "packages/nx/native-packages/linux-arm64-musl",
          "name": "linux-arm64-musl",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-linux-arm64-musl",
              "packageMain": "nx.linux-arm64-musl.node",
              "isInPackageManagerWorkspaces": false
            },
            "jsPackageName": "@nx/nx-linux-arm64-musl"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/linux-arm64-musl"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      },
      "win32-arm64-msvc": {
        "name": "win32-arm64-msvc",
        "type": "lib",
        "data": {
          "root": "packages/nx/native-packages/win32-arm64-msvc",
          "name": "win32-arm64-msvc",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-win32-arm64-msvc",
              "packageMain": "nx.win32-arm64-msvc.node",
              "isInPackageManagerWorkspaces": false
            },
            "jsPackageName": "@nx/nx-win32-arm64-msvc"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/win32-arm64-msvc"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      },
      "linux-arm64-gnu": {
        "name": "linux-arm64-gnu",
        "type": "lib",
        "data": {
          "root": "packages/nx/native-packages/linux-arm64-gnu",
          "name": "linux-arm64-gnu",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-linux-arm64-gnu",
              "packageMain": "nx.linux-arm64-gnu.node",
              "isInPackageManagerWorkspaces": false
            },
            "jsPackageName": "@nx/nx-linux-arm64-gnu"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/linux-arm64-gnu"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      },
      "linux-x64-musl": {
        "name": "linux-x64-musl",
        "type": "lib",
        "data": {
          "root": "packages/nx/native-packages/linux-x64-musl",
          "name": "linux-x64-musl",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-linux-x64-musl",
              "packageMain": "nx.linux-x64-musl.node",
              "isInPackageManagerWorkspaces": false
            },
            "jsPackageName": "@nx/nx-linux-x64-musl"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/linux-x64-musl"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      },
      "win32-x64-msvc": {
        "name": "win32-x64-msvc",
        "type": "lib",
        "data": {
          "root": "packages/nx/native-packages/win32-x64-msvc",
          "name": "win32-x64-msvc",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-win32-x64-msvc",
              "packageMain": "nx.win32-x64-msvc.node",
              "isInPackageManagerWorkspaces": false
            },
            "jsPackageName": "@nx/nx-win32-x64-msvc"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/win32-x64-msvc"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      },
      "linux-x64-gnu": {
        "name": "linux-x64-gnu",
        "type": "lib",
        "data": {
          "root": "packages/nx/native-packages/linux-x64-gnu",
          "name": "linux-x64-gnu",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-linux-x64-gnu",
              "packageMain": "nx.linux-x64-gnu.node",
              "isInPackageManagerWorkspaces": false
            },
            "jsPackageName": "@nx/nx-linux-x64-gnu"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/linux-x64-gnu"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      },
      "darwin-arm64": {
        "name": "darwin-arm64",
        "type": "lib",
        "data": {
          "root": "packages/nx/native-packages/darwin-arm64",
          "name": "darwin-arm64",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-darwin-arm64",
              "packageMain": "nx.darwin-arm64.node",
              "isInPackageManagerWorkspaces": false
            },
            "jsPackageName": "@nx/nx-darwin-arm64"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/darwin-arm64"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      },
      "freebsd-x64": {
        "name": "freebsd-x64",
        "type": "lib",
        "data": {
          "root": "packages/nx/native-packages/freebsd-x64",
          "name": "freebsd-x64",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-freebsd-x64",
              "packageMain": "nx.freebsd-x64.node",
              "isInPackageManagerWorkspaces": false
            },
            "jsPackageName": "@nx/nx-freebsd-x64"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/freebsd-x64"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      },
      "darwin-x64": {
        "name": "darwin-x64",
        "type": "lib",
        "data": {
          "root": "packages/nx/native-packages/darwin-x64",
          "name": "darwin-x64",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-darwin-x64",
              "packageMain": "nx.darwin-x64.node",
              "isInPackageManagerWorkspaces": false
            },
            "jsPackageName": "@nx/nx-darwin-x64"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/darwin-x64"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      },
      "tools-documentation-create-embeddings": {
        "name": "tools-documentation-create-embeddings",
        "type": "app",
        "data": {
          "root": "tools/documentation/create-embeddings",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "tools/documentation/create-embeddings",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "tools/documentation/create-embeddings",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [
                "{workspaceRoot}/coverage/tools/documentation/create-embeddings"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": ["{options.outputPath}"],
              "defaultConfiguration": "production",
              "options": {
                "platform": "node",
                "outputPath": "dist/tools/documentation/create-embeddings",
                "format": ["esm"],
                "bundle": false,
                "main": "tools/documentation/create-embeddings/src/main.mts",
                "tsConfig": "tools/documentation/create-embeddings/tsconfig.app.json",
                "assets": ["tools/documentation/create-embeddings/src/assets"],
                "generatePackageJson": true,
                "esbuildOptions": {
                  "sourcemap": true,
                  "outExtension": {
                    ".js": ".js"
                  }
                }
              },
              "configurations": {
                "development": {},
                "production": {
                  "esbuildOptions": {
                    "sourcemap": false,
                    "outExtension": {
                      ".js": ".js"
                    }
                  }
                }
              },
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "run-node": {
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "tools-documentation-create-embeddings:build",
                "watch": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "tools-documentation-create-embeddings:build:development"
                },
                "production": {
                  "buildTarget": "tools-documentation-create-embeddings:build:production"
                }
              },
              "parallelism": true
            }
          },
          "name": "tools-documentation-create-embeddings",
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "tools/documentation/create-embeddings/src",
          "projectType": "application",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "nx-dev-feature-package-schema-viewer": {
        "name": "nx-dev-feature-package-schema-viewer",
        "type": "lib",
        "data": {
          "root": "nx-dev/feature-package-schema-viewer",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/feature-package-schema-viewer",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/feature-package-schema-viewer",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [
                "{workspaceRoot}/coverage/nx-dev/feature-package-schema-viewer"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-feature-package-schema-viewer"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-feature-package-schema-viewer",
          "tags": ["npm:public", "scope:nx-dev", "type:feature"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-feature-package-schema-viewer",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-feature-package-schema-viewer"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/feature-package-schema-viewer/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "gradle-project-graph": {
        "name": "gradle-project-graph",
        "type": "lib",
        "data": {
          "root": "packages/gradle/project-graph",
          "targets": {
            "lint": {
              "cache": true,
              "executor": "nx:run-commands",
              "options": {
                "command": "./gradlew :project-graph:ktfmtCheck"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "args": [],
                "command": "./gradlew :project-graph:test"
              },
              "cache": true,
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"],
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "format": {
              "cache": true,
              "executor": "nx:run-commands",
              "options": {
                "command": "./gradlew :project-graph:ktfmtFormat"
              },
              "configurations": {},
              "parallelism": true
            },
            "publish-staging": {
              "cache": true,
              "outputs": ["{projectRoot}/build/staging"],
              "executor": "nx:run-commands",
              "options": {
                "command": "./gradlew :project-graph:publish"
              },
              "configurations": {},
              "parallelism": true
            },
            "zip-staging": {
              "options": {
                "cwd": "packages/gradle/project-graph/build/staging",
                "command": "zip -r ../deployment.zip ."
              },
              "inputs": ["{projectRoot}/build/staging"],
              "outputs": ["{projectRoot}/build/deployment.zip"],
              "dependsOn": ["publish-staging"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "maven": {
              "options": {
                "cwd": "packages/gradle/project-graph",
                "command": "npx ts-node publish-maven.ts --deploymentZipPath=build/deployment.zip"
              },
              "inputs": ["{projectRoot}/build/deployment.zip"],
              "dependsOn": ["zip-staging"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "gradle-project-graph",
          "$schema": "node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "create-nx-workspace": {
        "name": "create-nx-workspace",
        "type": "lib",
        "data": {
          "root": "packages/create-nx-workspace",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/create-nx-workspace",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/create-nx-workspace",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/create-nx-workspace"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "main": "packages/create-nx-workspace/index.ts",
                "assets": [
                  {
                    "input": "packages/create-nx-workspace",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/create-nx-workspace",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/create-nx-workspace",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/create-nx-workspace",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/create-nx-workspace",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/create-nx-workspace",
                "tsConfig": "packages/create-nx-workspace/tsconfig.lib.json"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": [
                "{workspaceRoot}/build/packages/create-nx-workspace/bin/create-nx-workspace.js",
                "{workspaceRoot}/build/packages/create-nx-workspace/README.md"
              ],
              "options": {
                "commands": [
                  {
                    "command": "node ./scripts/chmod build/packages/create-nx-workspace/bin/create-nx-workspace.js"
                  },
                  {
                    "command": "node ./scripts/copy-readme.js create-nx-workspace"
                  },
                  {
                    "command": "node ./scripts/replace-versions.js build/packages/create-nx-workspace/bin/create-nx-workspace.js"
                  }
                ],
                "parallel": false
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "create-nx-workspace",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Angular",
            "npm:React",
            "npm:Web",
            "npm:Node",
            "npm:Nest",
            "npm:Jest",
            "npm:Cypress",
            "npm:Playwright",
            "npm:CLI"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Smart Repos · Fast Builds",
            "js": {
              "packageName": "create-nx-workspace",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "create-nx-workspace"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/create-nx-workspace",
          "projectType": "library",
          "implicitDependencies": [
            "workspace",
            "js",
            "react",
            "expo",
            "next",
            "angular",
            "nest",
            "express",
            "vue"
          ]
        }
      },
      "gradle-batch-runner": {
        "name": "gradle-batch-runner",
        "type": "lib",
        "data": {
          "root": "packages/gradle/batch-runner",
          "name": "gradle-batch-runner",
          "$schema": "node_modules/nx/schemas/project-schema.json",
          "projectRoot": "packages/gradle/batch-runner",
          "sourceRoot": "packages/gradle/batch-runner/src",
          "targets": {
            "assemble": {
              "inputs": [
                "{projectRoot}/src/**",
                "{projectRoot}/build.gradle.kts",
                "{projectRoot}/settings.gradle.kts"
              ],
              "outputs": ["{projectRoot}/build"],
              "cache": true,
              "executor": "nx:run-commands",
              "options": {
                "command": "./gradlew :batch-runner:assemble"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "args": [],
                "command": "./gradlew :batch-runner:test"
              },
              "cache": true,
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"],
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "lint": {
              "cache": true,
              "executor": "nx:run-commands",
              "options": {
                "command": "./gradlew :batch-runner:ktfmtCheck"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "format": {
              "cache": true,
              "executor": "nx:run-commands",
              "options": {
                "command": "./gradlew :batch-runner:ktfmtFormat"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": [],
          "tags": []
        }
      },
      "nx-dev-data-access-documents": {
        "name": "nx-dev-data-access-documents",
        "type": "lib",
        "data": {
          "root": "nx-dev/data-access-documents",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/data-access-documents",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/data-access-documents",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [
                "{workspaceRoot}/coverage/nx-dev/data-access-documents"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-data-access-documents"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-data-access-documents",
          "tags": ["npm:public", "scope:nx-dev", "type:data-access"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-data-access-documents",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "node:*": {
                  "types": "./src/node.index.ts",
                  "default": "./src/node.index.ts"
                }
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-data-access-documents"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/data-access-documents/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-scrollable-content": {
        "name": "nx-dev-ui-scrollable-content",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-scrollable-content",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-scrollable-content",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-scrollable-content",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [
                "{workspaceRoot}/coverage/nx-dev/ui-scrollable-content"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-scrollable-content",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-scrollable-content/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:ui"],
          "implicitDependencies": []
        }
      },
      "nx-dev-data-access-packages": {
        "name": "nx-dev-data-access-packages",
        "type": "lib",
        "data": {
          "root": "nx-dev/data-access-packages",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/data-access-packages",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/data-access-packages",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [
                "{workspaceRoot}/coverage/nx-dev/data-access-packages"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-data-access-packages"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-data-access-packages",
          "tags": ["npm:public", "scope:nx-dev", "type:data-access"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-data-access-packages",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "node:*": {
                  "types": "./src/node.index.ts",
                  "default": "./src/node.index.ts"
                }
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-data-access-packages"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/data-access-packages/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "data-access-careers": {
        "name": "data-access-careers",
        "type": "lib",
        "data": {
          "root": "nx-dev/data-access-careers",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/data-access-careers",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/data-access-careers"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "data-access-careers",
          "tags": ["npm:public", "scope:nx-dev", "type:data-access"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-data-access-careers",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "node:*": {
                  "types": "./src/node.index.ts",
                  "default": "./src/node.index.ts"
                }
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-data-access-careers"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/data-access-careers/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "data-access-courses": {
        "name": "data-access-courses",
        "type": "lib",
        "data": {
          "root": "nx-dev/data-access-courses",
          "name": "data-access-courses",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-data-access-courses",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-data-access-courses"
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/data-access-courses"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/data-access-courses/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "module-federation": {
        "name": "module-federation",
        "type": "lib",
        "data": {
          "root": "packages/module-federation",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/module-federation",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/module-federation",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [
                "{workspaceRoot}/coverage/packages/module-federation"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "outputPath": "build/packages/module-federation",
                "tsConfig": "packages/module-federation/tsconfig.lib.json",
                "main": "packages/module-federation/index.ts",
                "assets": [
                  {
                    "input": "packages/module-federation",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/module-federation",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/module-federation",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/module-federation",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/module-federation",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ]
              },
              "outputs": ["{options.outputPath}"],
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "build": {
              "outputs": [
                "{workspaceRoot}/build/packages/module-federation/README.md"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js module-federation"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "module-federation",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Rspack",
            "npm:Webpack",
            "npm:Bundling",
            "npm:Module Federation"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Module Federation contains executors and utilities that support building applications using Module Federation.",
            "js": {
              "packageName": "@nx/module-federation",
              "packageMain": "index.js",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/module-federation"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/module-federation",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "create-nx-plugin": {
        "name": "create-nx-plugin",
        "type": "lib",
        "data": {
          "root": "packages/create-nx-plugin",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/create-nx-plugin",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/create-nx-plugin",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/create-nx-plugin"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "main": "packages/create-nx-plugin/bin/create-nx-plugin.ts",
                "assets": [
                  {
                    "input": "packages/create-nx-plugin",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/create-nx-plugin",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/create-nx-plugin",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/create-nx-plugin",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/create-nx-plugin",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/create-nx-plugin",
                "tsConfig": "packages/create-nx-plugin/tsconfig.lib.json"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": [
                "{workspaceRoot}/build/packages/create-nx-plugin/bin/create-nx-plugin.js",
                "{workspaceRoot}/build/packages/create-nx-plugin/README.md"
              ],
              "options": {
                "commands": [
                  {
                    "command": "node ./scripts/chmod build/packages/create-nx-plugin/bin/create-nx-plugin.js"
                  },
                  {
                    "command": "node ./scripts/copy-readme.js create-nx-plugin"
                  },
                  {
                    "command": "node ./scripts/replace-versions.js build/packages/create-nx-plugin/bin/create-nx-plugin.js"
                  }
                ],
                "parallel": false
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "create-nx-plugin",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Angular",
            "npm:React",
            "npm:Web",
            "npm:Node",
            "npm:Nest",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "This package is used to scaffold a brand-new workspace used to develop an Nx plugin, and sets up a pre-configured plugin with the specified name. The new plugin is created with a default generator, executor, and e2e app.",
            "js": {
              "packageName": "create-nx-plugin",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "create-nx-plugin"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/create-nx-plugin",
          "projectType": "library",
          "implicitDependencies": ["plugin"]
        }
      },
      "nx-dev-feature-doc-viewer": {
        "name": "nx-dev-feature-doc-viewer",
        "type": "lib",
        "data": {
          "root": "nx-dev/feature-doc-viewer",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/feature-doc-viewer",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/feature-doc-viewer",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/feature-doc-viewer"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-feature-doc-viewer"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-feature-doc-viewer",
          "tags": ["npm:public", "scope:nx-dev", "type:feature"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-feature-doc-viewer",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-feature-doc-viewer"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/feature-doc-viewer/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui-ai-landing-page": {
        "name": "ui-ai-landing-page",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-ai-landing-page",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-ai-landing-page",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-ai-landing-page",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-ai-landing-page"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "ui-ai-landing-page",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-ai-landing-page/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "graph-ui-project-details": {
        "name": "graph-ui-project-details",
        "type": "lib",
        "data": {
          "root": "graph/ui-project-details",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "graph/ui-project-details",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "graph/ui-project-details",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [
                "{workspaceRoot}/coverage/graph/graph-ui-project-details"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build:storybook": {
              "options": {
                "cwd": "graph/ui-project-details",
                "command": "storybook build"
              },
              "cache": true,
              "outputs": [
                "{projectRoot}/storybook-static",
                "{options.output-dir}",
                "{options.outputDir}",
                "{options.o}"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["storybook"]
                }
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve:storybook": {
              "continuous": true,
              "options": {
                "cwd": "graph/ui-project-details",
                "command": "storybook dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "static:storybook": {
              "dependsOn": ["build:storybook"],
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build:storybook",
                "staticFilePath": "graph/ui-project-details/storybook-static"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/graph-ui-project-details"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "storybook": {
              "executor": "@nx/storybook:storybook",
              "options": {
                "port": 4400,
                "configDir": "graph/ui-project-details/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "build-storybook": {
              "executor": "@nx/storybook:build",
              "outputs": ["{options.outputDir}"],
              "options": {
                "outputDir": "dist/storybook/graph-ui-project-details",
                "configDir": "graph/ui-project-details/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/.storybook/**/*",
                "{projectRoot}/.storybook/**/*",
                "{projectRoot}/tsconfig.storybook.json"
              ],
              "cache": true
            },
            "static-storybook": {
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "graph-ui-project-details:build-storybook",
                "staticFilePath": "dist/storybook/graph-ui-project-details"
              },
              "configurations": {
                "ci": {
                  "buildTarget": "graph-ui-project-details:build-storybook:ci"
                }
              },
              "parallelism": true,
              "continuous": true
            }
          },
          "name": "graph-ui-project-details",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/graph-internal-ui-project-details",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/graph-internal-ui-project-details"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "graph/ui-project-details/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-feature-analytics": {
        "name": "nx-dev-feature-analytics",
        "type": "lib",
        "data": {
          "root": "nx-dev/feature-analytics",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/feature-analytics",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/feature-analytics",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/feature-analytics"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-feature-analytics",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/feature-analytics/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:feature"],
          "implicitDependencies": []
        }
      },
      "feature-feedback": {
        "name": "feature-feedback",
        "type": "lib",
        "data": {
          "root": "nx-dev/feature-feedback",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/feature-feedback",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/feature-feedback",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/feature-feedback"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "feature-feedback",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/feature-feedback/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:feature"],
          "implicitDependencies": []
        }
      },
      "nx-dev-data-access-menu": {
        "name": "nx-dev-data-access-menu",
        "type": "lib",
        "data": {
          "root": "nx-dev/data-access-menu",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/data-access-menu",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/data-access-menu",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/data-access-menu"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-data-access-menu"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-data-access-menu",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-data-access-menu",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-data-access-menu"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/data-access-menu/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui-video-courses": {
        "name": "ui-video-courses",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-video-courses",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-video-courses",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-video-courses",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-video-courses/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "eslint-plugin": {
        "name": "eslint-plugin",
        "type": "lib",
        "data": {
          "root": "packages/eslint-plugin",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/eslint-plugin",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/eslint-plugin",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "main": "packages/eslint-plugin/src/index.ts",
                "assets": [
                  {
                    "input": "packages/eslint-plugin",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/eslint-plugin",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/eslint-plugin",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/eslint-plugin",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/eslint-plugin",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/eslint-plugin",
                "tsConfig": "packages/eslint-plugin/tsconfig.lib.json"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": [
                "{workspaceRoot}/build/packages/eslint-plugin/README.md"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js eslint-plugin"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "eslint-plugin",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Web",
            "npm:Lint",
            "npm:ESLint",
            "npm:CLI",
            "npm:Testing"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The eslint-plugin package is an ESLint plugin that contains a collection of recommended ESLint rule configurations which you can extend from in your own ESLint configs, as well as an Nx-specific lint rule called enforce-module-boundaries.",
            "js": {
              "packageName": "@nx/eslint-plugin",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/eslint-plugin"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/eslint-plugin",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-models-document": {
        "name": "nx-dev-models-document",
        "type": "lib",
        "data": {
          "root": "nx-dev/models-document",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/models-document",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/models-document",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/models-document"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-models-document"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-models-document",
          "tags": ["npm:public", "scope:nx-dev", "type:util"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-models-document",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-models-document"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/models-document/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-sponsor-card": {
        "name": "nx-dev-ui-sponsor-card",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-sponsor-card",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-sponsor-card",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-sponsor-card",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-sponsor-card"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-sponsor-card",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-sponsor-card/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:ui"],
          "implicitDependencies": []
        }
      },
      "ui-remote-cache": {
        "name": "ui-remote-cache",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-remote-cache",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-remote-cache",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-remote-cache",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-remote-cache/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "workspace-plugin": {
        "name": "workspace-plugin",
        "type": "lib",
        "data": {
          "root": "tools/workspace-plugin",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "tools/workspace-plugin",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "tools/workspace-plugin",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/tools/workspace-plugin"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "workspace-plugin",
          "tags": ["npm:private"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/workspace-plugin",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/workspace-plugin"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "tools/workspace-plugin/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "e2e-lerna-smoke-tests": {
        "name": "e2e-lerna-smoke-tests",
        "type": "app",
        "data": {
          "root": "e2e/lerna-smoke-tests",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": ["e2e-ci", "e2e-ci--src/lerna-smoke-tests.test.ts"]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/lerna-smoke-tests",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/lerna-smoke-tests.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/lerna-smoke-tests",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/lerna-smoke-tests.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/lerna-smoke-tests.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": ["e2e-ci--src/lerna-smoke-tests.test.ts"],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-lerna-smoke-tests",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/lerna-smoke-tests",
          "projectType": "application",
          "implicitDependencies": ["nx", "devkit"],
          "tags": []
        }
      },
      "graph-project-details": {
        "name": "graph-project-details",
        "type": "lib",
        "data": {
          "root": "graph/project-details",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "graph/project-details",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "graph/project-details",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/graph/project-details"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/graph-project-details"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "graph-project-details",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/graph-internal-project-details",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/graph-internal-project-details"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "graph/project-details/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-feature-search": {
        "name": "nx-dev-feature-search",
        "type": "lib",
        "data": {
          "root": "nx-dev/feature-search",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/feature-search",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/feature-search",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/feature-search"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-feature-search",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/feature-search/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:feature"],
          "implicitDependencies": []
        }
      },
      "nx-dev-models-package": {
        "name": "nx-dev-models-package",
        "type": "lib",
        "data": {
          "root": "nx-dev/models-package",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/models-package",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/models-package",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/models-package"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-models-package"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-models-package",
          "tags": ["npm:public", "scope:nx-dev", "type:util"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-models-package",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-models-package"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/models-package/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-member-card": {
        "name": "nx-dev-ui-member-card",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-member-card",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-member-card",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-member-card",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-member-card"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-member-card",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-member-card/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:ui"],
          "implicitDependencies": []
        }
      },
      "react-native": {
        "name": "react-native",
        "type": "lib",
        "data": {
          "root": "packages/react-native",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/react-native",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/react-native",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  "packages/react-native/*.md",
                  {
                    "input": "packages/react-native",
                    "glob": "**/files/**/.babelrc.template",
                    "output": "/"
                  },
                  {
                    "input": "packages/react-native/src",
                    "glob": "**/!(*.ts)",
                    "output": "/src"
                  },
                  {
                    "input": "packages/react-native",
                    "glob": "**/*.json",
                    "ignore": ["**/tsconfig*.json"],
                    "output": "/"
                  },
                  {
                    "input": "packages/react-native",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/react-native",
                "tsConfig": "packages/react-native/tsconfig.lib.json",
                "main": "packages/react-native/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": [
                "{workspaceRoot}/build/packages/react-native/README.md"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js react-native"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "react-native",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:React",
            "npm:Web",
            "npm:Jest",
            "npm:Native",
            "npm:CLI",
            "npm:Mobile"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for React Native contains generators for managing React Native applications and libraries within an Nx workspace. It provides: \n\n-Integration with libraries such as Jest, Detox, and Storybook.\n-Scaffolding for creating buildable libraries that can be published to npm.\n-Utilities for automatic workspace refactoring.",
            "js": {
              "packageName": "@nx/react-native",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/react-native"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/react-native/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "e2e-workspace-create": {
        "name": "e2e-workspace-create",
        "type": "app",
        "data": {
          "root": "e2e/workspace-create",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/create-nx-plugin.test.ts",
                "e2e-ci--src/create-nx-workspace-npm.test.ts",
                "e2e-ci--src/create-nx-workspace.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/workspace-create",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/create-nx-plugin.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/workspace-create",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/create-nx-plugin.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/create-nx-plugin.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/create-nx-workspace-npm.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/workspace-create",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/create-nx-workspace-npm.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/create-nx-workspace-npm.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/create-nx-workspace.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/workspace-create",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/create-nx-workspace.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/create-nx-workspace.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/create-nx-plugin.test.ts",
                "e2e-ci--src/create-nx-workspace-npm.test.ts",
                "e2e-ci--src/create-nx-workspace.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-workspace-create",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/workspace-create",
          "projectType": "application",
          "implicitDependencies": ["create-nx-workspace"],
          "tags": []
        }
      },
      "nx-dev-ui-animations": {
        "name": "nx-dev-ui-animations",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-animations",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-animations",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-animations",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-animations"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-animations",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-animations/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-conference": {
        "name": "nx-dev-ui-conference",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-conference",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-conference",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-conference",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-conference"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-conference",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-conference/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:feature"],
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-enterprise": {
        "name": "nx-dev-ui-enterprise",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-enterprise",
          "targets": {
            "lint": {
              "cache": true,
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "nx-dev/ui-enterprise",
                "command": "eslint ."
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-enterprise"],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "nx-dev/ui-enterprise",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-enterprise",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-enterprise/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:ui"],
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-primitives": {
        "name": "nx-dev-ui-primitives",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-primitives",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-primitives",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-primitives",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-primitives/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-references": {
        "name": "nx-dev-ui-references",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-references",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-references",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-references",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-references"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-references",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-references/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "graph-ui-code-block": {
        "name": "graph-ui-code-block",
        "type": "lib",
        "data": {
          "root": "graph/ui-code-block",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "graph/ui-code-block",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "graph/ui-code-block",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/graph/ui-graph"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build:storybook": {
              "options": {
                "cwd": "graph/ui-code-block",
                "command": "storybook build"
              },
              "cache": true,
              "outputs": [
                "{projectRoot}/storybook-static",
                "{options.output-dir}",
                "{options.outputDir}",
                "{options.o}"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["storybook"]
                }
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve:storybook": {
              "continuous": true,
              "options": {
                "cwd": "graph/ui-code-block",
                "command": "storybook dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "static:storybook": {
              "dependsOn": ["build:storybook"],
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build:storybook",
                "staticFilePath": "graph/ui-code-block/storybook-static"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/graph-ui-code-block"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "storybook": {
              "executor": "@nx/storybook:storybook",
              "options": {
                "port": 4400,
                "configDir": "graph/ui-code-block/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "build-storybook": {
              "executor": "@nx/storybook:build",
              "outputs": ["{options.outputDir}"],
              "options": {
                "outputDir": "dist/storybook/graph-ui-code-block",
                "configDir": "graph/ui-code-block/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/.storybook/**/*",
                "{projectRoot}/.storybook/**/*",
                "{projectRoot}/tsconfig.storybook.json"
              ],
              "cache": true
            },
            "test-storybook": {
              "executor": "nx:run-commands",
              "options": {
                "command": "test-storybook -c graph/ui-code-block/.storybook --url=http://localhost:4400"
              },
              "configurations": {},
              "parallelism": true
            },
            "static-storybook": {
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "graph-ui-code-block:build-storybook",
                "staticFilePath": "dist/storybook/graph-ui-code-block"
              },
              "configurations": {
                "ci": {
                  "buildTarget": "graph-ui-code-block:build-storybook:ci"
                }
              },
              "parallelism": true,
              "continuous": true
            }
          },
          "name": "graph-ui-code-block",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/graph-ui-code-block",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/graph-ui-code-block"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "graph/ui-code-block/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-community": {
        "name": "nx-dev-ui-community",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-community",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-community",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-community",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-community"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-community",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-community/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:ui"],
          "implicitDependencies": []
        }
      },
      "playwright": {
        "name": "playwright",
        "type": "lib",
        "data": {
          "root": "packages/playwright",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/playwright",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/playwright",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/packages/playwright"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build": {
              "outputs": [
                "{workspaceRoot}/build/packages/playwright/README.md"
              ],
              "commands": ["node ./scripts/copy-readme.js playwright"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true,
              "executor": "nx:noop"
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "assets": [
                  {
                    "input": "packages/playwright",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/playwright",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/playwright",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/playwright",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/playwright",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/playwright",
                "tsConfig": "packages/playwright/tsconfig.lib.json",
                "main": "packages/playwright/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "playwright",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Angular",
            "npm:React",
            "npm:Web",
            "npm:Node",
            "npm:Nest",
            "npm:Jest",
            "npm:Playwright",
            "npm:CLI",
            "npm:Testing",
            "npm:Front-end"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Playwright contains executors and generators allowing your workspace to use the powerful Playwright integration testing capabilities.",
            "js": {
              "packageName": "@nx/playwright",
              "packageExports": {
                ".": "./index.js",
                "./package.json": "./package.json",
                "./migrations.json": "./migrations.json",
                "./generators.json": "./generators.json",
                "./generators/*/schema.json": "./src/generators/*/schema.json",
                "./executors.json": "./executors.json",
                "./executors/*/schema.json": "./src/executors/*/schema.json",
                "./plugin": "./plugin.js",
                "./preset": "./src/utils/preset.js"
              },
              "packageMain": "./index.js",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/playwright"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/playwright",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui-customers": {
        "name": "ui-customers",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-customers",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-customers",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-customers",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-customers/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "ui-powerpack": {
        "name": "ui-powerpack",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-powerpack",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-powerpack",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-powerpack",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-powerpack/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "eslint-rules": {
        "name": "eslint-rules",
        "type": "lib",
        "data": {
          "root": "tools/eslint-rules",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "tools/eslint-rules",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "tools/eslint-rules",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "eslint-rules",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "tools/eslint-rules",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "nx-dev-models-menu": {
        "name": "nx-dev-models-menu",
        "type": "lib",
        "data": {
          "root": "nx-dev/models-menu",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/models-menu",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/models-menu",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/models-menu"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-models-menu",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/models-menu/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:util"],
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-commands": {
        "name": "nx-dev-ui-commands",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-commands",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-commands",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-commands",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-commands"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-commands",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-commands/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:ui"],
          "implicitDependencies": []
        }
      },
      "storybook": {
        "name": "storybook",
        "type": "lib",
        "data": {
          "root": "packages/storybook",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/storybook",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/storybook",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/storybook",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/storybook",
                    "glob": "**/project-files/.storybook/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/storybook",
                    "glob": "**/project-files-ts/.storybook/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/storybook",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json",
                      "**/test-configs/**"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/storybook",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/storybook",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/storybook",
                "tsConfig": "packages/storybook/tsconfig.lib.json",
                "main": "packages/storybook/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/storybook/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js storybook"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "storybook",
          "tags": [
            "npm:public",
            "npm:Angular",
            "npm:React",
            "npm:Web",
            "npm:Storybook",
            "npm:Cypress",
            "npm:CLI",
            "npm:Front-end",
            "npm:Testing"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Storybook contains executors and generators for allowing your workspace to use the powerful Storybook integration testing & documenting capabilities.",
            "js": {
              "packageName": "@nx/storybook",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/storybook"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/storybook",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui-partners": {
        "name": "ui-partners",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-partners",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-partners",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-partners",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-partners/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "workspace": {
        "name": "workspace",
        "type": "lib",
        "data": {
          "root": "packages/workspace",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/workspace",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/workspace",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/workspace"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/workspace",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/workspace",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/workspace",
                    "glob": "**/files-integrated-repo/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/workspace",
                    "glob": "**/files-integrated-repo/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/workspace",
                    "glob": "**/files-package-based-repo/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/workspace",
                    "glob": "**/files-readme/**",
                    "output": "/"
                  },
                  {
                    "glob": "**/files-packaged-based-repo/**/.gitkeep",
                    "input": "packages/workspace",
                    "output": "/"
                  },
                  {
                    "input": "packages/workspace",
                    "glob": "**/files-root-app/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/workspace",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/workspace",
                    "glob": "**/*.{js,css,html,svg}",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/workspace",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/workspace",
                "tsConfig": "packages/workspace/tsconfig.lib.json",
                "main": "packages/workspace/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/workspace/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js workspace"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "add-extra-dependencies": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/add-dependency-to-build.js workspace nx"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "workspace",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Angular",
            "npm:React",
            "npm:Web",
            "npm:Node",
            "npm:Nest",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Workspace plugin contains executors and generators that are useful for any Nx workspace. It should be present in every Nx workspace and other plugins build on it.",
            "js": {
              "packageName": "@nx/workspace",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/workspace"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/workspace/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-e2e": {
        "name": "nx-dev-e2e",
        "type": "e2e",
        "data": {
          "root": "nx-dev/nx-dev-e2e",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci--src/additional-api-references.spec.ts",
                "e2e-ci--src/app.spec.ts",
                "e2e-ci--src/nx-cloud-documentation.spec.ts",
                "e2e-ci--src/packages.spec.ts",
                "e2e-ci--src/recipes.spec.ts",
                "e2e-ci"
              ]
            }
          },
          "targets": {
            "pw-e2e": {
              "cache": true,
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'pw-e2e disabled'"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/additional-api-references.spec.ts": {
              "options": {
                "cwd": "nx-dev/nx-dev-e2e",
                "env": {},
                "command": "playwright test src/additional-api-references.spec.ts --output=../../dist/.playwright/nx-dev-e2e/test-output/src-additional-api-references-spec-ts"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in src/additional-api-references.spec.ts in CI",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ],
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/nx-dev-e2e/test-output/src-additional-api-references-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/app.spec.ts": {
              "options": {
                "cwd": "nx-dev/nx-dev-e2e",
                "env": {},
                "command": "playwright test src/app.spec.ts --output=../../dist/.playwright/nx-dev-e2e/test-output/src-app-spec-ts"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in src/app.spec.ts in CI",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ],
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/nx-dev-e2e/test-output/src-app-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/nx-cloud-documentation.spec.ts": {
              "options": {
                "cwd": "nx-dev/nx-dev-e2e",
                "env": {},
                "command": "playwright test src/nx-cloud-documentation.spec.ts --output=../../dist/.playwright/nx-dev-e2e/test-output/src-nx-cloud-documentation-spec-ts"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in src/nx-cloud-documentation.spec.ts in CI",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ],
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/nx-dev-e2e/test-output/src-nx-cloud-documentation-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/packages.spec.ts": {
              "options": {
                "cwd": "nx-dev/nx-dev-e2e",
                "env": {},
                "command": "playwright test src/packages.spec.ts --output=../../dist/.playwright/nx-dev-e2e/test-output/src-packages-spec-ts"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in src/packages.spec.ts in CI",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ],
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/nx-dev-e2e/test-output/src-packages-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/recipes.spec.ts": {
              "options": {
                "cwd": "nx-dev/nx-dev-e2e",
                "env": {},
                "command": "playwright test src/recipes.spec.ts --output=../../dist/.playwright/nx-dev-e2e/test-output/src-recipes-spec-ts"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in src/recipes.spec.ts in CI",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ],
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/nx-dev-e2e/test-output/src-recipes-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci": {
              "cache": true,
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'e2e-ci disabled'"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": ["e2eInputs", "^production"]
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/nx-dev-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "nx-dev-e2e",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/nx-dev-e2e/src",
          "projectType": "application",
          "tags": ["scope:nx-dev", "type:e2e"],
          "implicitDependencies": ["nx-dev"]
        }
      },
      "nx-dev-feature-ai": {
        "name": "nx-dev-feature-ai",
        "type": "lib",
        "data": {
          "root": "nx-dev/feature-ai",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/feature-ai",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/feature-ai",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/feature-ai"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-feature-ai",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/feature-ai/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:feature"],
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-contact": {
        "name": "nx-dev-ui-contact",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-contact",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-contact",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-contact",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-contact"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-contact",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-contact/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:ui"],
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-markdoc": {
        "name": "nx-dev-ui-markdoc",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-markdoc",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-markdoc",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-markdoc",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-markdoc"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-ui-markdoc"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-ui-markdoc",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-ui-markdoc",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-ui-markdoc"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-markdoc/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui-careers": {
        "name": "ui-careers",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-careers",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-careers",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-careers",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-careers/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "ui-company": {
        "name": "ui-company",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-company",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-company",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-company",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-company/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "ui-courses": {
        "name": "ui-courses",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-courses",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-courses",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-courses",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-courses/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "ui-podcast": {
        "name": "ui-podcast",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-podcast",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-podcast",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-podcast",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-podcast/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "ui-pricing": {
        "name": "ui-pricing",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-pricing",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-pricing",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-pricing",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-pricing/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "ui-webinar": {
        "name": "ui-webinar",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-webinar",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-webinar",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-webinar",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-webinar/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "angular": {
        "name": "angular",
        "type": "lib",
        "data": {
          "root": "packages/angular",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/angular",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-ng": {
              "dependsOn": ["build-base"],
              "executor": "@nx/angular:package",
              "options": {
                "project": "packages/angular/ng-package.json",
                "tsConfig": "packages/angular/tsconfig.lib.runtime.json"
              },
              "outputs": ["{workspaceRoot}/build/packages/angular"],
              "configurations": {},
              "parallelism": true,
              "cache": true
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/angular",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/angular",
                    "glob": "**/creator-files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/angular",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/angular",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/angular",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/angular",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/angular",
                "tsConfig": "packages/angular/tsconfig.lib.json",
                "main": "packages/angular/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "dependsOn": ["build-ng", "build-base", "^build"],
              "outputs": ["{workspaceRoot}/build/packages/angular/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js angular"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "angular",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Angular",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI",
            "npm:Front-end"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Angular contains executors, generators, and utilities for managing Angular applications and libraries within an Nx workspace. It provides: \n\n- Integration with libraries such as Storybook, Jest, ESLint, Tailwind CSS, Playwright and Cypress. \n\n- Generators to help scaffold code quickly (like: Micro Frontends, Libraries, both internal to your codebase and publishable to npm) \n\n- Single Component Application Modules (SCAMs) \n\n- NgRx helpers. \n\n- Utilities for automatic workspace refactoring.",
            "js": {
              "packageName": "@nx/angular",
              "packageExports": {
                "./migrations.json": "./migrations.json",
                "./generators.json": "./generators.json",
                "./executors.json": "./executors.json",
                "./generators": "./generators.js",
                "./executors": "./executors.js",
                "./plugin": "./plugin.js",
                "./tailwind": "./tailwind.js",
                "./module-federation": "./module-federation/index.js",
                "./src/utils": "./src/utils/index.js",
                "./plugins/component-testing": "./plugins/component-testing.js",
                "./src/generators/utils": "./src/generators/utils/index.js",
                "./src/generators/move/move-impl": "./src/generators/move/move-impl.js",
                "./src/builders/*/schema.json": "./src/builders/*/schema.json",
                "./src/builders/*.impl": "./src/builders/*.impl.js",
                "./src/executors/*/schema.json": "./src/executors/*/schema.json",
                "./src/executors/*.impl": "./src/executors/*.impl.js"
              },
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/angular"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/angular",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "cypress": {
        "name": "cypress",
        "type": "lib",
        "data": {
          "root": "packages/cypress",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/cypress",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/cypress",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/cypress",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/cypress",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/cypress",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/cypress",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/cypress",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/cypress",
                "tsConfig": "packages/cypress/tsconfig.lib.json",
                "main": "packages/cypress/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/cypress/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js cypress"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "cypress",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Angular",
            "npm:React",
            "npm:Web",
            "npm:Node",
            "npm:Nest",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI",
            "npm:Front-end",
            "npm:Testing"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Cypress contains executors and generators allowing your workspace to use the powerful Cypress integration testing capabilities.",
            "js": {
              "packageName": "@nx/cypress",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/cypress"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/cypress",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "e2e-graph-client": {
        "name": "e2e-graph-client",
        "type": "app",
        "data": {
          "root": "graph/client-e2e",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "graph/client-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "e2e-base": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "testingType": "e2e",
                "skipServe": true,
                "browser": "chrome"
              },
              "configurations": {
                "dev": {
                  "cypressConfig": "graph/client-e2e/cypress.config.ts"
                },
                "watch": {
                  "cypressConfig": "graph/client-e2e/cypress-watch-mode.config.ts"
                },
                "release": {
                  "cypressConfig": "graph/client-e2e/cypress-release.config.ts"
                },
                "release-static": {
                  "cypressConfig": "graph/client-e2e/cypress-release-static.config.ts"
                }
              },
              "defaultConfiguration": "dev",
              "parallelism": true,
              "inputs": ["default", "^production"]
            },
            "e2e-local": {
              "executor": "nx:run-commands",
              "outputs": [],
              "options": {
                "commands": [
                  "npx nx e2e-base e2e-graph-client --configuration dev",
                  "npx nx e2e-base e2e-graph-client --configuration watch",
                  "npx nx e2e-base e2e-graph-client --configuration release",
                  "npx nx e2e-base e2e-graph-client --configuration release-static"
                ],
                "parallel": false
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "DISABLED__e2e": {
              "executor": "nx:run-commands",
              "outputs": [],
              "options": {
                "commands": [
                  "npx nx e2e-base e2e-graph-client --configuration dev",
                  "npx nx e2e-base e2e-graph-client --configuration release",
                  "npx nx e2e-base e2e-graph-client --configuration release-static"
                ],
                "parallel": false
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "e2e-graph-client",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "graph/client-e2e/src",
          "projectType": "application",
          "implicitDependencies": ["graph-client"],
          "tags": []
        }
      },
      "e2e-react-native": {
        "name": "e2e-react-native",
        "type": "app",
        "data": {
          "root": "e2e/react-native",
          "metadata": {
            "targetGroups": {
              "E2E MACOS (CI)": [
                "e2e-macos-ci",
                "e2e-macos-ci--src/react-native-legacy.test.ts",
                "e2e-macos-ci--src/react-native.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-macos-local": {
              "options": {
                "cwd": "e2e/react-native",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-macos-ci--src/react-native-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react-native-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "e2e/react-native",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react-native-legacy.test.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-macos-ci--src/react-native.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react-native.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "e2e/react-native",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react-native.test.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-macos-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-macos-ci--src/react-native-legacy.test.ts",
                "e2e-macos-ci--src/react-native.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-macos-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-react-native",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/react-native",
          "projectType": "application",
          "implicitDependencies": ["react-native"],
          "tags": []
        }
      },
      "esbuild": {
        "name": "esbuild",
        "type": "lib",
        "data": {
          "root": "packages/esbuild",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/esbuild",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/esbuild",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/esbuild",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/esbuild",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/esbuild",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/esbuild",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/esbuild",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/esbuild",
                "tsConfig": "packages/esbuild/tsconfig.lib.json",
                "main": "packages/esbuild/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/esbuild/README.md"],
              "commands": ["node ./scripts/copy-readme.js esbuild"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true,
              "executor": "nx:noop"
            }
          },
          "name": "esbuild",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:EsBuild",
            "npm:Web",
            "npm:CLI",
            "npm:Front-end",
            "npm:Backend"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for esbuild contains executors and generators that support building applications using esbuild",
            "js": {
              "packageName": "@nx/esbuild",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/esbuild"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/esbuild",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "express": {
        "name": "express",
        "type": "lib",
        "data": {
          "root": "packages/express",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/express",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/express",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/express",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/express",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/express",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/express",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/express",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/express",
                "tsConfig": "packages/express/tsconfig.lib.json",
                "main": "packages/express/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/express/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js express"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "express",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Node",
            "npm:Express",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI",
            "npm:Backend"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Express contains executors and generators for allowing your workspace to create powerful Express Node applications and APIs.",
            "js": {
              "packageName": "@nx/express",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/express"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/express",
          "projectType": "library",
          "implicitDependencies": ["node"]
        }
      },
      "nx-dev-ui-common": {
        "name": "nx-dev-ui-common",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-common",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-common",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-common",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-common"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-ui-common"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-ui-common",
          "tags": ["npm:public", "scope:nx-dev", "type:ui"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-ui-common",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-ui-common"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-common/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-gradle": {
        "name": "nx-dev-ui-gradle",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-gradle",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-gradle",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-gradle",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-gradle"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-gradle",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-gradle/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "rsbuild": {
        "name": "rsbuild",
        "type": "lib",
        "data": {
          "root": "packages/rsbuild",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/rsbuild",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/rsbuild",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/packages/rsbuild"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "outputPath": "build/packages/rsbuild",
                "tsConfig": "packages/rsbuild/tsconfig.lib.json",
                "main": "packages/rsbuild/index.ts",
                "assets": [
                  {
                    "input": "packages/rsbuild",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/rsbuild",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/rsbuild",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/rsbuild",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/rsbuild",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ]
              },
              "outputs": ["{options.outputPath}"],
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/rsbuild/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js rsbuild"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "rsbuild",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Rspack",
            "npm:Webpack",
            "npm:Bundling",
            "npm:Module Federation",
            "npm:Rsbuild"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Rsbuild contains an Nx plugin, executors and utilities that support building applications using Rsbuild.",
            "js": {
              "packageName": "@nx/rsbuild",
              "packageExports": {
                ".": {
                  "types": "./index.d.ts",
                  "default": "./index.js"
                },
                "./package.json": {
                  "default": "./package.json"
                },
                "./generators": {
                  "types": "./generators.d.ts",
                  "default": "./generators.js"
                },
                "./config-utils": {
                  "types": "./config-utils.d.ts",
                  "default": "./config-utils.js"
                }
              },
              "packageMain": "index.js",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/rsbuild"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/rsbuild",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui-brands": {
        "name": "ui-brands",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-brands",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-brands",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-brands",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-brands/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "webpack": {
        "name": "webpack",
        "type": "lib",
        "data": {
          "root": "packages/webpack",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/webpack",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/webpack",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/webpack",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/webpack",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/webpack",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/webpack",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/webpack",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/webpack",
                "tsConfig": "packages/webpack/tsconfig.lib.json",
                "main": "packages/webpack/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/webpack/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js webpack"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "webpack",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Webpack",
            "npm:Web",
            "npm:CLI",
            "npm:Front-end"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Webpack contains executors and generators that support building applications using Webpack.",
            "js": {
              "packageName": "@nx/webpack",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/webpack"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/webpack",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "devkit": {
        "name": "devkit",
        "type": "lib",
        "data": {
          "root": "packages/devkit",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/devkit",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/devkit",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/devkit"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/devkit",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/devkit",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/devkit",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/devkit",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/devkit",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/devkit",
                "tsConfig": "packages/devkit/tsconfig.lib.json",
                "main": "packages/devkit/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/devkit/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js devkit"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "devkit",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Angular",
            "npm:React",
            "npm:Web",
            "npm:Node",
            "npm:Nest",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Devkit is used to customize Nx for different technologies and use cases. It contains many utility functions for reading and writing files, updating configuration, working with Abstract Syntax Trees(ASTs), and more. Learn more about [extending Nx by leveraging the Nx Devkit](https://nx.dev/extending-nx/intro/getting-started) on our docs.",
            "js": {
              "packageName": "@nx/devkit",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/devkit"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/devkit",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "eslint": {
        "name": "eslint",
        "type": "lib",
        "data": {
          "root": "packages/eslint",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/eslint",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/eslint",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/eslint",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/eslint",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/eslint",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/eslint",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/eslint",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/eslint",
                "tsConfig": "packages/eslint/tsconfig.lib.json",
                "main": "packages/eslint/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/eslint/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js eslint"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "eslint",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Web",
            "npm:Lint",
            "npm:ESLint",
            "npm:CLI",
            "npm:Testing"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The ESLint plugin for Nx contains executors, generators and utilities used for linting JavaScript/TypeScript projects within an Nx workspace.",
            "js": {
              "packageName": "@nx/eslint",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/eslint"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/eslint",
          "projectType": "library",
          "implicitDependencies": ["eslint-plugin"]
        }
      },
      "gradle": {
        "name": "gradle",
        "type": "lib",
        "data": {
          "root": "packages/gradle",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/gradle",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/gradle",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {
                "packageRoot": "build/packages/gradle"
              },
              "configurations": {},
              "parallelism": true
            },
            "build-base": {
              "dependsOn": [
                "^build-base",
                "build-native",
                "gradle-batch-runner:assemble"
              ],
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/gradle",
                    "glob": "**/@(files|files-angular)/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/gradle",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/gradle",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/gradle",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/gradle",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "packages/gradle/batch-runner",
                    "glob": "**/*.jar",
                    "output": "/batch-runner"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/gradle",
                "tsConfig": "packages/gradle/tsconfig.lib.json",
                "main": "packages/gradle/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/gradle/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js gradle"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "gradle",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Java",
            "npm:Gradle",
            "npm:CLI",
            "npm:Backend"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Gradle allows Gradle tasks to be run through Nx",
            "js": {
              "packageName": "@nx/gradle",
              "packageExports": {
                ".": "./index.js",
                "./plugin-v1": "./plugin-v1.js",
                "./package.json": "./package.json",
                "./migrations.json": "./migrations.json",
                "./generators.json": "./generators.json"
              },
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/gradle"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/gradle/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-fence": {
        "name": "nx-dev-ui-fence",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-fence",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-fence",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-fence",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-fence"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-ui-fence"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-ui-fence",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-ui-fence",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-ui-fence"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-fence/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-icons": {
        "name": "nx-dev-ui-icons",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-icons",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-icons",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-icons",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-icons"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev-ui-icons"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev-ui-icons",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-ui-icons",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-ui-icons"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-icons/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev-ui-theme": {
        "name": "nx-dev-ui-theme",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-theme",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-theme",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-theme",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-theme"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-theme",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-theme/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "plugin": {
        "name": "plugin",
        "type": "lib",
        "data": {
          "root": "packages/plugin",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/plugin",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/plugin",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/plugin",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/plugin",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/plugin",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/plugin",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/plugin",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/plugin",
                "tsConfig": "packages/plugin/tsconfig.lib.json",
                "main": "packages/plugin/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/plugin/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js plugin"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "plugin",
          "tags": ["npm:public", "npm:Monorepo", "npm:Nx", "npm:CLI"],
          "metadata": {
            "targetGroups": {},
            "description": "This plugin is used to create Nx plugins! It contains generators for generating common plugin features like generators, executors, migrations and more.",
            "js": {
              "packageName": "@nx/plugin",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/plugin"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/plugin/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "rollup": {
        "name": "rollup",
        "type": "lib",
        "data": {
          "root": "packages/rollup",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/rollup",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/rollup",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/rollup",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/rollup",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/rollup",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/rollup",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/rollup",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/rollup",
                "tsConfig": "packages/rollup/tsconfig.lib.json",
                "main": "packages/rollup/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/rollup/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js rollup"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "rollup",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Rollup",
            "npm:Web",
            "npm:CLI"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Rollup contains executors and generators that support building applications using Rollup.",
            "js": {
              "packageName": "@nx/rollup",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/rollup"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/rollup",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "rspack": {
        "name": "rspack",
        "type": "lib",
        "data": {
          "root": "packages/rspack",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/rspack",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/rspack",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/packages/rspack"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/rspack/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js rspack"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "build-base": {
              "dependsOn": ["^build-base"],
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "build/packages/rspack",
                "main": "packages/rspack/src/index.ts",
                "tsConfig": "packages/rspack/tsconfig.lib.json",
                "assets": [
                  "packages/rspack/*.md",
                  {
                    "input": "./packages/rspack/src",
                    "glob": "**/!(*.ts)",
                    "output": "./src"
                  },
                  {
                    "input": "./packages/rspack/src",
                    "glob": "**/*.d.ts",
                    "output": "./src"
                  },
                  {
                    "input": "./packages/rspack",
                    "glob": "**.json",
                    "output": ".",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ]
                  },
                  "LICENSE"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "rspack",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Rspack",
            "npm:Bundling",
            "npm:Module Federation"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Rspack contains executors and generators that support building applications using Rspack.",
            "js": {
              "packageName": "@nx/rspack",
              "packageMain": "src/index.js",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/rspack"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/rspack/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "tutorial": {
        "name": "tutorial",
        "type": "lib",
        "data": {
          "root": "nx-dev/tutorial",
          "targets": {
            "lint": {
              "cache": true,
              "executor": "nx:run-commands",
              "options": {
                "command": "echo no linting"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "astro": {
              "executor": "nx:run-script",
              "options": {
                "script": "astro"
              },
              "metadata": {
                "scriptContent": "npx astro",
                "runCommand": "pnpm run astro"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "metadata": {
                "scriptContent": "npx astro check && npx astro build",
                "runCommand": "pnpm run build"
              },
              "inputs": ["{projectRoot}/src/**/**"],
              "outputs": ["{projectRoot}/dist"],
              "options": {
                "script": "build"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "npx astro dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "npx astro preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "nx:run-script",
              "options": {
                "script": "serve"
              },
              "metadata": {
                "scriptContent": "npx astro dev --port 4200",
                "runCommand": "pnpm run serve"
              },
              "configurations": {},
              "parallelism": true
            },
            "build-code-block-button": {
              "inputs": [
                "{projectRoot}/src/code-block-button/compile-js-module.mjs",
                "{projectRoot}/src/code-block-button/js-module.ts",
                {
                  "externalDependencies": ["esbuild"]
                }
              ],
              "outputs": [
                "{projectRoot}/src/code-block-button/js-module.min.ts"
              ],
              "options": {
                "cwd": "nx-dev/tutorial",
                "command": "node ./compile-js-module.mjs"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "tutorial",
          "tags": ["npm:private"],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": ["astro", "build", "dev", "preview", "serve"]
            },
            "js": {
              "packageName": "tutorial",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "tutorial"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/tutorial/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui-cloud": {
        "name": "ui-cloud",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-cloud",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-cloud",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-cloud",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-cloud/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "ui-common": {
        "name": "ui-common",
        "type": "lib",
        "data": {
          "root": "graph/ui-common",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "graph/ui-common",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/ui-common"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "ui-common",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/graph/ui-common",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/graph/ui-common"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "graph/ui-common/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui-react": {
        "name": "ui-react",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-react",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-react",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-react",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-react/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "detox": {
        "name": "detox",
        "type": "lib",
        "data": {
          "root": "packages/detox",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/detox",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/detox",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/detox",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/detox",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/detox",
                    "glob": "**/files/**/.babelrc.template",
                    "output": "/"
                  },
                  {
                    "input": "packages/detox",
                    "glob": "**/files/**/.detoxrc.json.template",
                    "output": "/"
                  },
                  {
                    "input": "./packages/detox",
                    "glob": "**/*.json",
                    "ignore": ["**/tsconfig*.json"],
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/detox",
                "tsConfig": "packages/detox/tsconfig.lib.json",
                "main": "packages/detox/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/detox/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js detox"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "detox",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:React",
            "npm:Web",
            "npm:Native",
            "npm:CLI",
            "npm:Detox",
            "npm:Testing",
            "npm:Mobile"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Detox contains executors and generators for allowing your workspace to use the powerful Detox integration testing capabilities.",
            "js": {
              "packageName": "@nx/detox",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/detox"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/detox/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "e2e-playwright": {
        "name": "e2e-playwright",
        "type": "app",
        "data": {
          "root": "e2e/playwright",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": ["e2e-ci", "e2e-ci--src/playwright.test.ts"]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/playwright",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/playwright.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/playwright",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/playwright.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/playwright.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": ["e2e-ci--src/playwright.test.ts"],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-playwright",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/playwright",
          "projectType": "application",
          "implicitDependencies": ["playwright"],
          "tags": []
        }
      },
      "nx-dev-ui-home": {
        "name": "nx-dev-ui-home",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-home",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-home",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/ui-home",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/ui-home"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            }
          },
          "name": "nx-dev-ui-home",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-home/src",
          "projectType": "library",
          "tags": ["scope:nx-dev", "type:ui"],
          "implicitDependencies": []
        }
      },
      "nx-dev-util-ai": {
        "name": "nx-dev-util-ai",
        "type": "lib",
        "data": {
          "root": "nx-dev/util-ai",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/util-ai",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/util-ai",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/util-ai"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/nx-dev/util-ai",
                "main": "nx-dev/util-ai/src/index.ts",
                "tsConfig": "nx-dev/util-ai/tsconfig.lib.json",
                "assets": ["nx-dev/util-ai/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "nx-dev-util-ai",
          "tags": ["npm:private"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev-util-ai",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev-util-ai"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/util-ai/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "react": {
        "name": "react",
        "type": "lib",
        "data": {
          "root": "packages/react",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/react",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/react",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/react",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/react",
                    "glob": "**/files/**/.babelrc__tmpl__",
                    "output": "/"
                  },
                  {
                    "input": "packages/react",
                    "glob": "**/files/**/.browserslistrc__tmpl__",
                    "output": "/"
                  },
                  {
                    "input": "packages/react",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/react",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "packages/react",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/react",
                "tsConfig": "packages/react/tsconfig.lib.json",
                "main": "packages/react/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/react/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js react"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "react",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:React",
            "npm:Web",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI",
            "npm:Front-end"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The React plugin for Nx contains executors and generators for managing React applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, components, hooks, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
            "js": {
              "packageName": "@nx/react",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/react"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/react",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "remix": {
        "name": "remix",
        "type": "lib",
        "data": {
          "root": "packages/remix",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/remix",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/remix",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/packages/remix"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/remix/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js remix"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "build/packages/remix",
                "tsConfig": "packages/remix/tsconfig.lib.json",
                "packageJson": "packages/remix/package.json",
                "main": "packages/remix/index.ts",
                "generateExportsField": true,
                "additionalEntryPoints": [
                  "packages/remix/{executors,generators,migrations}.json",
                  "packages/remix/generators.ts"
                ],
                "assets": [
                  "packages/remix/*.md",
                  {
                    "input": "./packages/remix/src",
                    "glob": "**/!(*.ts)",
                    "output": "./src"
                  },
                  {
                    "input": "./packages/remix/src",
                    "glob": "**/*.d.ts",
                    "output": "./src"
                  },
                  {
                    "input": "./packages/remix",
                    "glob": "**.json",
                    "output": ".",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ]
                  },
                  "LICENSE"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "remix",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Remix",
            "npm:React",
            "npm:Web",
            "npm:CLI",
            "npm:Front-end"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Remix plugin for Nx contains executors and generators for managing Remix applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Jest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, routes, loaders, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
            "js": {
              "packageName": "@nx/remix",
              "packageExports": {
                ".": "./index.js",
                "./plugin": "./plugin.js",
                "./plugins/component-testing": "./plugins/component-testing/index.js"
              },
              "packageMain": "./index.js",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/remix"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/remix/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "ui-blog": {
        "name": "ui-blog",
        "type": "lib",
        "data": {
          "root": "nx-dev/ui-blog",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/ui-blog",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            }
          },
          "name": "ui-blog",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/ui-blog/src",
          "projectType": "library",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "ui-theme": {
        "name": "ui-theme",
        "type": "lib",
        "data": {
          "root": "graph/ui-theme",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "graph/ui-theme",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "build:storybook": {
              "options": {
                "cwd": "graph/ui-theme",
                "command": "storybook build"
              },
              "cache": true,
              "outputs": [
                "{projectRoot}/storybook-static",
                "{options.output-dir}",
                "{options.outputDir}",
                "{options.o}"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["storybook"]
                }
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve:storybook": {
              "continuous": true,
              "options": {
                "cwd": "graph/ui-theme",
                "command": "storybook dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "static:storybook": {
              "dependsOn": ["build:storybook"],
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build:storybook",
                "staticFilePath": "graph/ui-theme/storybook-static"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/ui-theme"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "storybook": {
              "executor": "@nx/storybook:storybook",
              "options": {
                "port": 4400,
                "configDir": "graph/ui-theme/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "build-storybook": {
              "executor": "@nx/storybook:build",
              "outputs": ["{options.outputDir}"],
              "options": {
                "outputDir": "dist/storybook/ui-theme",
                "configDir": "graph/ui-theme/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/.storybook/**/*",
                "{projectRoot}/.storybook/**/*",
                "{projectRoot}/tsconfig.storybook.json"
              ],
              "cache": true
            }
          },
          "name": "ui-theme",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/graph-internal-ui-theme",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/graph-internal-ui-theme"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "graph/ui-theme/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "e2e-storybook": {
        "name": "e2e-storybook",
        "type": "app",
        "data": {
          "root": "e2e/storybook",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/storybook-angular.test.ts",
                "e2e-ci--src/storybook-nested.test.ts",
                "e2e-ci--src/storybook.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/storybook",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/storybook-angular.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/storybook",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/storybook-angular.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/storybook-angular.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/storybook-nested.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/storybook",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/storybook-nested.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/storybook-nested.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/storybook.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/storybook",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/storybook.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/storybook.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/storybook-angular.test.ts",
                "e2e-ci--src/storybook-nested.test.ts",
                "e2e-ci--src/storybook.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-storybook",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/storybook",
          "projectType": "application",
          "implicitDependencies": ["storybook"],
          "tags": []
        }
      },
      "expo": {
        "name": "expo",
        "type": "lib",
        "data": {
          "root": "packages/expo",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/expo",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/expo",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  "packages/expo/*.md",
                  {
                    "input": "packages/expo",
                    "glob": "**/!(*.ts)",
                    "output": "/"
                  },
                  {
                    "input": "packages/expo",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "packages/expo",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/expo",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/expo",
                    "glob": "**/files/**/.babelrc.js.template",
                    "output": "/"
                  },
                  {
                    "input": "packages/expo",
                    "glob": "**/*.json",
                    "ignore": ["**/tsconfig*.json", "**/project.json"],
                    "output": "/"
                  },
                  "LICENSE"
                ],
                "outputPath": "build/packages/expo",
                "tsConfig": "packages/expo/tsconfig.lib.json",
                "main": "packages/expo/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/expo/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js expo"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "expo",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Expo",
            "npm:React",
            "npm:Web",
            "npm:Jest",
            "npm:Native",
            "npm:CLI",
            "npm:Mobile",
            "npm:Testing"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Expo Plugin for Nx contains executors and generators for managing and developing an expo application within your workspace. For example, you can directly build for different target platforms as well as generate projects and publish your code.",
            "js": {
              "packageName": "@nx/expo",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/expo"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/expo/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "graph-migrate": {
        "name": "graph-migrate",
        "type": "lib",
        "data": {
          "root": "graph/migrate",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "graph/migrate",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "graph/migrate",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/graph/migrate"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build:storybook": {
              "options": {
                "cwd": "graph/migrate",
                "command": "storybook build"
              },
              "cache": true,
              "outputs": [
                "{projectRoot}/storybook-static",
                "{options.output-dir}",
                "{options.outputDir}",
                "{options.o}"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["storybook"]
                }
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve:storybook": {
              "continuous": true,
              "options": {
                "cwd": "graph/migrate",
                "command": "storybook dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "static:storybook": {
              "dependsOn": ["build:storybook"],
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build:storybook",
                "staticFilePath": "graph/migrate/storybook-static"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/graph-migrate"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "graph-migrate",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/graph-migrate",
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/graph-migrate"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "graph/migrate/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "jest": {
        "name": "jest",
        "type": "lib",
        "data": {
          "root": "packages/jest",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/jest",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/jest",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/jest",
                    "glob": "**/@(files|files-angular)/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/jest",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/jest",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/jest",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/jest",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/jest",
                "tsConfig": "packages/jest/tsconfig.lib.json",
                "main": "packages/jest/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/jest/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js jest"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "jest",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Angular",
            "npm:React",
            "npm:Web",
            "npm:Node",
            "npm:Nest",
            "npm:Jest",
            "npm:Unit Testing",
            "npm:CLI",
            "npm:Testing"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Jest contains executors and generators allowing your workspace to use the powerful Jest testing capabilities.",
            "js": {
              "packageName": "@nx/jest",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/jest"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/jest",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nest": {
        "name": "nest",
        "type": "lib",
        "data": {
          "root": "packages/nest",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/nest",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/nest",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/nest",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/nest",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/nest",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/nest",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/nest",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/nest",
                "tsConfig": "packages/nest/tsconfig.lib.json",
                "main": "packages/nest/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/nest/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js nest"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "nest",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Node",
            "npm:Nest",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI",
            "npm:Backend"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Nest contains executors and generators for allowing your workspace to create powerful Nest best in class APIs.",
            "js": {
              "packageName": "@nx/nest",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nest"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/nest",
          "projectType": "library",
          "implicitDependencies": ["node", "eslint"]
        }
      },
      "next": {
        "name": "next",
        "type": "lib",
        "data": {
          "root": "packages/next",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/next",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/next",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/next",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/next",
                    "glob": "**/files/**/.babelrc__tmpl__",
                    "output": "/"
                  },
                  {
                    "input": "packages/next",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/next",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/next",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/next",
                "tsConfig": "packages/next/tsconfig.lib.json",
                "main": "packages/next/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/next/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js next"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "next",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Node",
            "npm:Next",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI",
            "npm:Front-end"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Next.js plugin for Nx contains executors and generators for managing Next.js applications and libraries within an Nx workspace. It provides:\n\n\n- Scaffolding for creating, building, serving, linting, and testing Next.js applications.\n\n- Integration with building, serving, and exporting a Next.js application.\n\n- Integration with React libraries within the workspace. \n\nWhen using Next.js in Nx, you get the out-of-the-box support for TypeScript, Playwright, Cypress, and Jest. No need to configure anything: watch mode, source maps, and typings just work.",
            "js": {
              "packageName": "@nx/next",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/next"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/next",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "node": {
        "name": "node",
        "type": "lib",
        "data": {
          "root": "packages/node",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/node",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/node",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/node",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/node",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/node",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/node",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/node",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/node",
                "tsConfig": "packages/node/tsconfig.lib.json",
                "main": "packages/node/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/node/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js node"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "node",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Node",
            "npm:Nest",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI",
            "npm:Backend"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Node Plugin for Nx contains generators to manage Node applications within an Nx workspace.",
            "js": {
              "packageName": "@nx/node",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/node"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/node",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nuxt": {
        "name": "nuxt",
        "type": "lib",
        "data": {
          "root": "packages/nuxt",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/nuxt",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/nuxt",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/packages/nuxt"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "outputPath": "build/packages/nuxt",
                "tsConfig": "packages/nuxt/tsconfig.lib.json",
                "main": "packages/nuxt/index.ts",
                "generateExportsField": true,
                "additionalEntryPoints": [
                  "packages/nuxt/{executors,generators,migrations}.json",
                  "packages/nuxt/plugin.ts"
                ],
                "assets": [
                  {
                    "input": "packages/nuxt",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/nuxt",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/nuxt",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/nuxt",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/nuxt",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ]
              },
              "outputs": ["{options.outputPath}"],
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/nuxt/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js nuxt"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "nuxt",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Nuxt",
            "npm:Web",
            "npm:CLI",
            "npm:Front-end"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nuxt plugin for Nx contains executors and generators for managing Nuxt applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
            "js": {
              "packageName": "@nx/nuxt",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nuxt"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/nuxt",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx-dev": {
        "name": "nx-dev",
        "type": "app",
        "data": {
          "root": "nx-dev/nx-dev",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "nx-dev/nx-dev",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "nx-dev/nx-dev",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/nx-dev/nx-dev"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "next:build": {
              "options": {
                "cwd": "nx-dev/nx-dev",
                "tty": false,
                "command": "next build"
              },
              "dependsOn": ["^build"],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["next"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/nx-dev/nx-dev/.next/!(cache)/**/*",
                "{workspaceRoot}/nx-dev/nx-dev/.next/!(cache)"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "nx-dev/nx-dev",
                "command": "next dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "next:start": {
              "continuous": true,
              "options": {
                "cwd": "nx-dev/nx-dev",
                "command": "next start"
              },
              "dependsOn": ["next:build"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "options": {
                "cwd": "nx-dev/nx-dev",
                "command": "next start"
              },
              "dependsOn": ["next:build"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects nx-dev --includeDependentProjects -- pnpm exec nx build-deps nx-dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx-dev"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": [
                {
                  "target": "build-base"
                }
              ],
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "nx run nx-dev:sitemap",
                  "ts-node -P ./scripts/tsconfig.scripts.json ./scripts/documentation/internal-link-checker.ts"
                ],
                "parallel": false
              },
              "inputs": [
                "production",
                "^production",
                "{workspaceRoot}/scripts/tsconfig.scripts.json",
                "{workspaceRoot}/scripts/documentation/internal-link-checker.ts"
              ],
              "outputs": ["{workspaceRoot}/dist/nx-dev/nx-dev"],
              "configurations": {},
              "parallelism": true,
              "cache": true
            },
            "sitemap": {
              "executor": "nx:run-commands",
              "outputs": ["{workspaceRoot}/dist/nx-dev/nx-dev/public"],
              "options": {
                "command": "pnpm next-sitemap --config ./nx-dev/nx-dev/next-sitemap.config.js"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true
            },
            "generate-og-images": {
              "executor": "nx:run-commands",
              "outputs": ["{projectRoot}/public/images/open-graph"],
              "options": {
                "command": "ts-node -P ./scripts/tsconfig.scripts.json ./scripts/documentation/open-graph/generate-images.ts"
              },
              "configurations": {},
              "parallelism": true
            },
            "build-base": {
              "parallelism": false,
              "executor": "@nx/next:build",
              "dependsOn": ["copy-docs"],
              "outputs": ["{options.outputPath}"],
              "options": {
                "root": "nx-dev/nx-dev",
                "outputPath": "dist/nx-dev/nx-dev",
                "tsConfig": "nx-dev/nx-dev/tsconfig.lib.json",
                "main": "nx-dev/nx-dev/index.ts"
              },
              "configurations": {
                "development": {
                  "outputPath": "nx-dev/nx-dev"
                },
                "production": {}
              },
              "inputs": ["production", "^production"],
              "cache": true
            },
            "copy-docs": {
              "inputs": ["{workspaceRoot}/docs/**/*"],
              "outputs": ["{projectRoot}/public/documentation"],
              "options": {
                "cwd": "nx-dev/nx-dev",
                "command": "node ./copy-docs.js"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "cache": true
            },
            "copy-tutorial": {
              "inputs": ["{workspaceRoot}/nx-dev/tutorial/**/*"],
              "outputs": ["{projectRoot}/public/tutorials"],
              "dependsOn": ["tutorial:build"],
              "options": {
                "cwd": "nx-dev/nx-dev",
                "command": "node ./copy-tutorial.js"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-docs": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "nx watch --projects=docs,tutorial -- nx run-many -t=copy-docs,copy-tutorial -p nx-dev",
                  "nx run nx-dev:serve"
                ],
                "parallel": true
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "dependsOn": ["build-base"],
              "executor": "nx:run-commands",
              "options": {
                "command": "nx run nx-dev:serve:production"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/next:server",
              "dependsOn": ["copy-docs", "copy-tutorial"],
              "options": {
                "buildTarget": "nx-dev:build-base",
                "dev": true
              },
              "configurations": {
                "production": {
                  "buildTarget": "nx-dev:build-base:production",
                  "dev": false
                },
                "development": {
                  "buildTarget": "nx-dev:build-base:development",
                  "dev": true
                }
              },
              "defaultConfiguration": "development",
              "parallelism": true,
              "continuous": true
            },
            "deploy-build": {
              "executor": "nx:run-commands",
              "outputs": ["{projectRoot}/public/documentation"],
              "dependsOn": ["@nx/nx-source:documentation"],
              "options": {
                "commands": [
                  {
                    "command": "nx run nx-dev:generate-og-images",
                    "description": "OG images generation"
                  },
                  {
                    "command": "nx copy-docs nx-dev",
                    "description": "Copy generated docs to build output"
                  },
                  {
                    "command": "nx copy-tutorial nx-dev",
                    "description": "Copy tutorial to build output"
                  },
                  {
                    "command": "npx ts-node -P scripts/tsconfig.scripts.json scripts/documentation/plugin-quality-indicators.ts",
                    "description": "Fetch plugin data"
                  },
                  {
                    "command": "nx run nx-dev:build",
                    "description": "NextJs build step"
                  }
                ],
                "color": true,
                "parallel": false
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "nx-dev",
          "tags": ["npm:public", "scope:nx-dev", "type:app"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/nx-dev",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-dev"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "nx-dev/nx-dev",
          "projectType": "application",
          "implicitDependencies": ["docs"]
        }
      },
      "typedoc-theme": {
        "name": "typedoc-theme",
        "type": "lib",
        "data": {
          "root": "typedoc-theme",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "typedoc-theme",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "typedoc-theme",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/typedoc-theme"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/typedoc-theme",
                "main": "typedoc-theme/src/index.ts",
                "tsConfig": "typedoc-theme/tsconfig.lib.json",
                "assets": ["typedoc-theme/*.md"]
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo 'Building TypeDoc custom theme'"
              },
              "outputs": ["{workspaceRoot}/dist/typedoc-theme"],
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "typedoc-theme",
          "tags": ["npm:private", "npm:typedocplugin"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/typedoc-theme",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/typedoc-theme"
          },
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "typedoc-theme/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "vite": {
        "name": "vite",
        "type": "lib",
        "data": {
          "root": "packages/vite",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/vite",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/vite",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/packages/vite"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "dependsOn": ["^build-base"],
              "executor": "@nx/js:swc",
              "options": {
                "outputPath": "build/packages/vite",
                "tsConfig": "packages/vite/tsconfig.lib.json",
                "main": "packages/vite/index.ts",
                "assets": [
                  {
                    "input": "packages/vite",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/vite",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/vite",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/vite",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/vite",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ]
              },
              "outputs": ["{options.outputPath}"],
              "configurations": {},
              "parallelism": true,
              "inputs": ["production", "^production"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/vite/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js vite"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "vite",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Vite",
            "npm:Web",
            "npm:CLI",
            "npm:Front-end"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for building and testing applications using Vite",
            "js": {
              "packageName": "@nx/vite",
              "packageExports": {
                ".": "./index.js",
                "./plugin": "./plugin.js",
                "./package.json": "./package.json",
                "./migrations.json": "./migrations.json",
                "./generators.json": "./generators.json",
                "./executors.json": "./executors.json",
                "./executors": "./executors.js",
                "./src/executors/*/schema.json": "./src/executors/*/schema.json",
                "./src/executors/*.impl": "./src/executors/*.impl.js",
                "./src/executors/*/compat": "./src/executors/*/compat.js",
                "./plugins/nx-copy-assets.plugin": "./plugins/nx-copy-assets.plugin.js",
                "./plugins/nx-tsconfig-paths.plugin": "./plugins/nx-tsconfig-paths.plugin.js",
                "./plugins/rollup-replace-files.plugin": "./plugins/rollup-replace-files.plugin.js"
              },
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/vite"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/vite",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "graph-client": {
        "name": "graph-client",
        "type": "app",
        "data": {
          "root": "graph/client",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "graph/client",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "graph/client",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/graph/client"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-client": {
              "cache": true,
              "dependsOn": ["nx:build-native"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["webpack-cli"]
                }
              ],
              "outputs": ["{workspaceRoot}/build/apps/graph"],
              "metadata": {
                "technologies": ["webpack"],
                "description": "Runs Webpack build",
                "help": {
                  "command": "pnpm exec webpack-cli build --help",
                  "example": {
                    "options": {
                      "json": "stats.json"
                    },
                    "args": ["--profile"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {
                "dev": {},
                "nx-console": {},
                "release": {},
                "watch": {},
                "release-static": {},
                "dev-e2e": {}
              },
              "defaultConfiguration": "release",
              "options": {
                "cwd": "graph/client",
                "args": ["--node-env=production"],
                "command": "webpack-cli build"
              },
              "parallelism": true
            },
            "serve-base": {
              "continuous": true,
              "metadata": {
                "technologies": ["webpack"],
                "description": "Starts Webpack dev server",
                "help": {
                  "command": "pnpm exec webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": ["--client-progress", "--history-api-fallback "]
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {
                "dev": {},
                "nx-console": {},
                "release": {},
                "watch": {},
                "release-static": {},
                "dev-e2e": {}
              },
              "defaultConfiguration": "dev",
              "options": {
                "cwd": "graph/client",
                "args": ["--node-env=development"],
                "command": "webpack-cli serve"
              },
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "options": {
                "cwd": "graph/client",
                "args": ["--node-env=production"],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": ["webpack"],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "pnpm exec webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": ["--client-progress", "--history-api-fallback "]
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "dependsOn": ["build-client"],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build-client",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects graph-client --includeDependentProjects -- pnpm exec nx build-deps graph-client"
              },
              "configurations": {},
              "parallelism": true
            },
            "build:storybook": {
              "options": {
                "cwd": "graph/client",
                "command": "storybook build"
              },
              "cache": true,
              "outputs": [
                "{projectRoot}/storybook-static",
                "{options.output-dir}",
                "{options.outputDir}",
                "{options.o}"
              ],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["storybook"]
                }
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve:storybook": {
              "continuous": true,
              "options": {
                "cwd": "graph/client",
                "command": "storybook dev"
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "static:storybook": {
              "dependsOn": ["build:storybook"],
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build:storybook",
                "staticFilePath": "graph/client/storybook-static"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/graph-client"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "generate-dev-environment-js": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "ts-node -P ./scripts/tsconfig.scripts.json ./scripts/generate-graph-environment.ts"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "generate-graph-base": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "ts-node -P ./scripts/tsconfig.scripts.json ./scripts/generate-graph.ts"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "generate-graph": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npx nx run graph-client:generate-graph-base",
                  "npx nx run graph-client:generate-dev-environment-js"
                ],
                "parallel": false
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "configurations": {
                "dev": {
                  "commands": [
                    "npx nx run graph-client:generate-dev-environment-js",
                    "npx nx serve-base graph-client"
                  ],
                  "parallel": false
                },
                "dev-e2e": {
                  "commands": [
                    "npx nx serve-base graph-client --configuration dev-e2e"
                  ]
                },
                "release": {
                  "commands": [
                    "npx nx serve-base graph-client --configuration release"
                  ]
                },
                "release-static": {
                  "commands": [
                    "npx nx serve-base graph-client --configuration release-static"
                  ]
                },
                "watch": {
                  "commands": [
                    "npx nx serve-base graph-client --configuration watch"
                  ]
                },
                "nx-console": {
                  "commands": [
                    "npx nx serve-base graph-client --configuration nx-console"
                  ]
                }
              },
              "defaultConfiguration": "dev",
              "options": {},
              "parallelism": true
            },
            "storybook": {
              "executor": "@nx/storybook:storybook",
              "options": {
                "port": 4400,
                "configDir": "graph/client/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "build-storybook": {
              "executor": "@nx/storybook:build",
              "outputs": ["{options.outputDir}"],
              "options": {
                "configDir": "graph/client/.storybook",
                "outputDir": "dist/storybook/graph-client"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/.storybook/**/*",
                "{projectRoot}/.storybook/**/*",
                "{projectRoot}/tsconfig.storybook.json"
              ],
              "cache": true
            }
          },
          "projectType": "application",
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@nx/graph-client",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/graph-client"
          },
          "name": "graph-client",
          "tags": ["npm:public"],
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "graph/client/src",
          "implicitDependencies": []
        }
      },
      "vue": {
        "name": "vue",
        "type": "lib",
        "data": {
          "root": "packages/vue",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/vue",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/vue",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": ["{workspaceRoot}/coverage/packages/vue"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "outputPath": "build/packages/vue",
                "tsConfig": "packages/vue/tsconfig.lib.json",
                "main": "packages/vue/index.ts",
                "generateExportsField": true,
                "additionalEntryPoints": [
                  "packages/vue/{executors,generators,migrations}.json",
                  "packages/vue/src/tailwind.ts"
                ],
                "assets": [
                  {
                    "input": "packages/vue",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/vue",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/vue",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/vue",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/vue",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ]
              },
              "outputs": ["{options.outputPath}"],
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/vue/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js vue"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "vue",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Vue",
            "npm:Web",
            "npm:CLI",
            "npm:Front-end"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Vue plugin for Nx contains executors and generators for managing Vue applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Vitest, Playwright, Cypress, and Storybook.\n\n- Generators for applications, libraries, and more.\n\n- Library build support for publishing packages to npm or other registries.\n\n- Utilities for automatic workspace refactoring.",
            "js": {
              "packageName": "@nx/vue",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/vue"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/vue",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "web": {
        "name": "web",
        "type": "lib",
        "data": {
          "root": "packages/web",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/web",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/web",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "assets": [
                  {
                    "input": "packages/web",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/web",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/web",
                    "glob": "**/files/**/.babelrc__tmpl__",
                    "output": "/"
                  },
                  {
                    "input": "packages/web",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/web",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/web",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/web",
                "tsConfig": "packages/web/tsconfig.lib.json",
                "main": "packages/web/index.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/web/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js web"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "web",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Web",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI",
            "npm:Front-end"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The Nx Plugin for Web Components contains generators for managing Web Component applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Playwright, Cypress, and Storybook.\n\n- Scaffolding for creating buildable libraries that can be published to npm.\n\n- Utilities for automatic workspace refactoring.",
            "js": {
              "packageName": "@nx/web",
              "packageMain": "./index",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/web"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/web",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "e2e-angular": {
        "name": "e2e-angular",
        "type": "app",
        "data": {
          "root": "e2e/angular",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/config.test.ts",
                "e2e-ci--src/cypress-component-tests.test.ts",
                "e2e-ci--src/misc.test.ts",
                "e2e-ci--src/module-federation.rspack.test.ts",
                "e2e-ci--src/module-federation.test.ts",
                "e2e-ci--src/ng-add.test.ts",
                "e2e-ci--src/ngrx.test.ts",
                "e2e-ci--src/plugin.test.ts",
                "e2e-ci--src/projects.test.ts",
                "e2e-ci--src/tailwind.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/config.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/config.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/config.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/cypress-component-tests.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/cypress-component-tests.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/cypress-component-tests.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/misc.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/misc.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/misc.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation.rspack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation.rspack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation.rspack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/ng-add.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/ng-add.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/ng-add.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/ngrx.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/ngrx.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/ngrx.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/plugin.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/plugin.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/plugin.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/projects.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/projects.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/projects.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/tailwind.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/angular",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/tailwind.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/tailwind.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/config.test.ts",
                "e2e-ci--src/cypress-component-tests.test.ts",
                "e2e-ci--src/misc.test.ts",
                "e2e-ci--src/module-federation.rspack.test.ts",
                "e2e-ci--src/module-federation.test.ts",
                "e2e-ci--src/ng-add.test.ts",
                "e2e-ci--src/ngrx.test.ts",
                "e2e-ci--src/plugin.test.ts",
                "e2e-ci--src/projects.test.ts",
                "e2e-ci--src/tailwind.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-angular",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/angular",
          "projectType": "application",
          "implicitDependencies": ["angular"],
          "tags": []
        }
      },
      "e2e-cypress": {
        "name": "e2e-cypress",
        "type": "app",
        "data": {
          "root": "e2e/cypress",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/cypress-legacy.test.ts",
                "e2e-ci--src/cypress.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/cypress",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/cypress-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/cypress",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/cypress-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/cypress-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/cypress.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/cypress",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/cypress.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/cypress.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/cypress-legacy.test.ts",
                "e2e-ci--src/cypress.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-cypress",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/cypress",
          "projectType": "application",
          "implicitDependencies": ["cypress", "react"],
          "tags": []
        }
      },
      "e2e-esbuild": {
        "name": "e2e-esbuild",
        "type": "app",
        "data": {
          "root": "e2e/esbuild",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": ["e2e-ci", "e2e-ci--src/esbuild.test.ts"]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/esbuild",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/esbuild.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/esbuild",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/esbuild.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/esbuild.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": ["e2e-ci--src/esbuild.test.ts"],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-esbuild",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/esbuild",
          "projectType": "application",
          "implicitDependencies": ["esbuild"],
          "tags": []
        }
      },
      "e2e-nx-init": {
        "name": "e2e-nx-init",
        "type": "app",
        "data": {
          "root": "e2e/nx-init",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/nx-init-angular.test.ts",
                "e2e-ci--src/nx-init-monorepo.test.ts",
                "e2e-ci--src/nx-init-nest.test.ts",
                "e2e-ci--src/nx-init-npm-repo.test.ts",
                "e2e-ci--src/nx-init-react.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/nx-init",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nx-init-angular.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx-init",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nx-init-angular.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nx-init-angular.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nx-init-monorepo.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx-init",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nx-init-monorepo.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nx-init-monorepo.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nx-init-nest.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx-init",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nx-init-nest.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nx-init-nest.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nx-init-npm-repo.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx-init",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nx-init-npm-repo.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nx-init-npm-repo.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nx-init-react.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx-init",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nx-init-react.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nx-init-react.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/nx-init-angular.test.ts",
                "e2e-ci--src/nx-init-monorepo.test.ts",
                "e2e-ci--src/nx-init-nest.test.ts",
                "e2e-ci--src/nx-init-npm-repo.test.ts",
                "e2e-ci--src/nx-init-react.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-nx-init",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/nx-init",
          "projectType": "application",
          "implicitDependencies": ["nx", "angular", "react", "js", "nest"],
          "tags": []
        }
      },
      "e2e-release": {
        "name": "e2e-release",
        "type": "app",
        "data": {
          "root": "e2e/release",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/circular-dependencies.test.ts",
                "e2e-ci--src/conventional-commits-config.test.ts",
                "e2e-ci--src/create-github-release.test.ts",
                "e2e-ci--src/custom-registries.test.ts",
                "e2e-ci--src/first-release.test.ts",
                "e2e-ci--src/independent-projects.test.ts",
                "e2e-ci--src/lock-file-updates.test.ts",
                "e2e-ci--src/multiple-release-branches.test.ts",
                "e2e-ci--src/nx-release-git-operations.test.ts",
                "e2e-ci--src/pre-version-command.test.ts",
                "e2e-ci--src/preserve-local-dependency-protocols.test.ts",
                "e2e-ci--src/private-js-packages.test.ts",
                "e2e-ci--src/release-publishable-libraries-ts-solution.test.ts",
                "e2e-ci--src/release-publishable-libraries.test.ts",
                "e2e-ci--src/release-tag-pattern.test.ts",
                "e2e-ci--src/release.test.ts",
                "e2e-ci--src/version-plans-check.test.ts",
                "e2e-ci--src/version-plans-only-touched.test.ts",
                "e2e-ci--src/version-plans.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/circular-dependencies.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/circular-dependencies.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/circular-dependencies.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/conventional-commits-config.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/conventional-commits-config.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/conventional-commits-config.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/create-github-release.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/create-github-release.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/create-github-release.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/custom-registries.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/custom-registries.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/custom-registries.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/first-release.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/first-release.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/first-release.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/independent-projects.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/independent-projects.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/independent-projects.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/lock-file-updates.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/lock-file-updates.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/lock-file-updates.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/multiple-release-branches.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/multiple-release-branches.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/multiple-release-branches.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nx-release-git-operations.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nx-release-git-operations.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nx-release-git-operations.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/pre-version-command.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/pre-version-command.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/pre-version-command.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/preserve-local-dependency-protocols.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/preserve-local-dependency-protocols.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/preserve-local-dependency-protocols.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/private-js-packages.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/private-js-packages.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/private-js-packages.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/release-publishable-libraries-ts-solution.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/release-publishable-libraries-ts-solution.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/release-publishable-libraries-ts-solution.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/release-publishable-libraries.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/release-publishable-libraries.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/release-publishable-libraries.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/release-tag-pattern.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/release-tag-pattern.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/release-tag-pattern.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/release.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/release.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/release.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/version-plans-check.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/version-plans-check.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/version-plans-check.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/version-plans-only-touched.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/version-plans-only-touched.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/version-plans-only-touched.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/version-plans.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/release",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/version-plans.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/version-plans.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/circular-dependencies.test.ts",
                "e2e-ci--src/conventional-commits-config.test.ts",
                "e2e-ci--src/create-github-release.test.ts",
                "e2e-ci--src/custom-registries.test.ts",
                "e2e-ci--src/first-release.test.ts",
                "e2e-ci--src/independent-projects.test.ts",
                "e2e-ci--src/lock-file-updates.test.ts",
                "e2e-ci--src/multiple-release-branches.test.ts",
                "e2e-ci--src/nx-release-git-operations.test.ts",
                "e2e-ci--src/pre-version-command.test.ts",
                "e2e-ci--src/preserve-local-dependency-protocols.test.ts",
                "e2e-ci--src/private-js-packages.test.ts",
                "e2e-ci--src/release-publishable-libraries-ts-solution.test.ts",
                "e2e-ci--src/release-publishable-libraries.test.ts",
                "e2e-ci--src/release-tag-pattern.test.ts",
                "e2e-ci--src/release.test.ts",
                "e2e-ci--src/version-plans-check.test.ts",
                "e2e-ci--src/version-plans-only-touched.test.ts",
                "e2e-ci--src/version-plans.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-release",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/release",
          "projectType": "application",
          "implicitDependencies": ["nx", "js"],
          "tags": []
        }
      },
      "e2e-webpack": {
        "name": "e2e-webpack",
        "type": "app",
        "data": {
          "root": "e2e/webpack",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/webpack.legacy.test.ts",
                "e2e-ci--src/webpack.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/webpack",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/webpack.legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/webpack",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/webpack.legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/webpack.legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/webpack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/webpack",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/webpack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/webpack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/webpack.legacy.test.ts",
                "e2e-ci--src/webpack.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-webpack",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/webpack",
          "projectType": "application",
          "implicitDependencies": ["webpack"],
          "tags": []
        }
      },
      "js": {
        "name": "js",
        "type": "lib",
        "data": {
          "root": "packages/js",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/js",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/js",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/js"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "main": "packages/js/src/index.ts",
                "assets": [
                  {
                    "input": "packages/js",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/js",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/js",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "project.json",
                      ".eslintrc.json"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/js",
                    "glob": "**/*.js",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/js",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/js",
                "tsConfig": "packages/js/tsconfig.lib.json"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "build": {
              "outputs": ["{workspaceRoot}/build/packages/js/README.md"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/copy-readme.js js"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-base", "build-native"],
              "inputs": ["production", "^production"],
              "cache": true
            }
          },
          "name": "js",
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Web",
            "npm:Node",
            "npm:Swc",
            "npm:Tsc",
            "npm:CLI",
            "npm:Front-end",
            "npm:Backend"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "The JS plugin for Nx contains executors and generators that provide the best experience for developing JavaScript and TypeScript projects. ",
            "js": {
              "packageName": "@nx/js",
              "packageMain": "src/index.js",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/js"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/js/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "nx": {
        "name": "nx",
        "type": "lib",
        "data": {
          "root": "packages/nx",
          "name": "nx",
          "release": {
            "version": {
              "generator": "@nx/js:release-version"
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "options": {
                "packageRoot": "build/packages/nx"
              },
              "dependsOn": ["^nx-release-publish"],
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/nx",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "test": {
              "options": {
                "cwd": "packages/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest",
                "args": [
                  "--passWithNoTests",
                  "--detectOpenHandles",
                  "--forceExit"
                ]
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["test-native", "build-native", "^build-native"]
            },
            "postinstall": {
              "executor": "nx:run-script",
              "options": {
                "script": "postinstall"
              },
              "metadata": {
                "scriptContent": "node ./bin/post-install",
                "runCommand": "pnpm run postinstall"
              },
              "configurations": {},
              "parallelism": true
            },
            "build-native-wasm": {
              "cache": true,
              "inputs": ["native"],
              "outputs": [
                "{projectRoot}/src/native/*.wasm",
                "{projectRoot}/src/native/*.js",
                "{projectRoot}/src/native/*.cjs",
                "{projectRoot}/src/native/*.mjs",
                "{projectRoot}/src/native/index.d.ts"
              ],
              "executor": "@monodon/rust:napi",
              "options": {
                "target": "wasm32-wasip1-threads",
                "dist": "packages/nx/src/native",
                "jsFile": "native-bindings.js",
                "release": true
              },
              "configurations": {},
              "parallelism": true
            },
            "build-native": {
              "outputs": [
                "{projectRoot}/src/native/*.node",
                "{projectRoot}/src/native/*.js",
                "{projectRoot}/src/native/index.d.ts"
              ],
              "executor": "@monodon/rust:napi",
              "options": {
                "dist": "packages/nx/src/native",
                "jsFile": "native-bindings.js",
                "release": true
              },
              "configurations": {
                "local": {
                  "release": false
                }
              },
              "parallelism": true,
              "inputs": ["native"],
              "cache": true
            },
            "copy-native-package-directories": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node scripts/copy.js build/packages/nx/native-packages/* build/packages"
              },
              "configurations": {},
              "parallelism": true
            },
            "artifacts": {
              "dependsOn": ["copy-native-package-directories"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm napi artifacts --package-json-path build/packages/nx/package.json -d ./artifacts --npm-dir build/packages"
              },
              "configurations": {},
              "parallelism": true
            },
            "build-base": {
              "executor": "@nx/js:tsc",
              "options": {
                "main": "packages/nx/bin/nx.ts",
                "assets": [
                  {
                    "input": "packages/nx",
                    "glob": ".npmignore",
                    "output": "/"
                  },
                  {
                    "input": "packages/nx",
                    "glob": "**/files/**",
                    "output": "/"
                  },
                  {
                    "input": "packages/nx",
                    "glob": "**/files/**/.gitkeep",
                    "output": "/"
                  },
                  {
                    "input": "packages/nx",
                    "glob": "**/*.json",
                    "ignore": [
                      "**/tsconfig*.json",
                      "**/project.json",
                      "**/__fixtures__/**"
                    ],
                    "output": "/"
                  },
                  {
                    "input": "packages/nx",
                    "glob": "**/*.{mjs,cjs,js,css,html,svg,wasm}",
                    "ignore": ["**/jest.config.js"],
                    "output": "/"
                  },
                  {
                    "input": "packages/nx",
                    "glob": "**/*.d.ts",
                    "output": "/"
                  },
                  {
                    "input": "",
                    "glob": "LICENSE",
                    "output": "/"
                  }
                ],
                "outputPath": "build/packages/nx",
                "tsConfig": "packages/nx/tsconfig.lib.json"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build-base", "build-native"],
              "inputs": ["production", "^production"],
              "outputs": ["{options.outputPath}"],
              "cache": true
            },
            "echo": {
              "executor": "nx:run-commands",
              "options": {
                "command": "echo hi"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": ["^build-client", "build-base", "build-native"],
              "inputs": [
                "production",
                "^production",
                {
                  "dependentTasksOutputFiles": "**/*.node"
                }
              ],
              "executor": "nx:run-commands",
              "outputs": [
                "{workspaceRoot}/build/packages/nx/**/*.{node,wasm,js,mjs,cjs}",
                "{workspaceRoot}/build/packages/nx/src/core/graph",
                "{workspaceRoot}/build/packages/nx/bin/nx.js",
                "{workspaceRoot}/build/packages/nx/README.md"
              ],
              "options": {
                "commands": [
                  {
                    "command": "node ./scripts/copy-local-native.js nx"
                  },
                  {
                    "command": "node ./scripts/copy-graph-client.js"
                  },
                  {
                    "command": "node ./scripts/chmod build/packages/nx/bin/nx.js"
                  },
                  {
                    "command": "node ./scripts/copy-readme.js nx"
                  }
                ],
                "parallel": false
              },
              "configurations": {},
              "parallelism": true,
              "cache": true
            },
            "test-native": {
              "configurations": {},
              "options": {},
              "parallelism": true,
              "inputs": ["native"],
              "executor": "@monodon/rust:test",
              "cache": true
            },
            "format-native": {
              "cache": true,
              "inputs": ["native"],
              "options": {
                "cwd": "packages/nx/src/native",
                "args": ["--all", "--check"],
                "command": "cargo fmt"
              },
              "configurations": {
                "fix": {
                  "args": ["--all"]
                }
              },
              "executor": "nx:run-commands",
              "parallelism": true
            },
            "lint-native": {
              "cache": true,
              "inputs": ["native"],
              "options": {
                "cwd": "packages/nx/src/native",
                "args": ["--frozen"],
                "command": "cargo clippy"
              },
              "configurations": {
                "fix": {
                  "args": []
                }
              },
              "executor": "nx:run-commands",
              "parallelism": true
            }
          },
          "tags": [
            "npm:public",
            "npm:Monorepo",
            "npm:Angular",
            "npm:React",
            "npm:Web",
            "npm:Node",
            "npm:Nest",
            "npm:Jest",
            "npm:Cypress",
            "npm:CLI",
            "npm:Testing",
            "npm:Front-end",
            "npm:Backend",
            "npm:Mobile"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": ["postinstall"]
            },
            "description": "The core Nx plugin contains the core functionality of Nx like the project graph, nx commands and task orchestration.",
            "js": {
              "packageName": "nx",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "nx"
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/nx",
          "projectType": "library",
          "implicitDependencies": ["graph-client"]
        }
      },
      "e2e-eslint": {
        "name": "e2e-eslint",
        "type": "app",
        "data": {
          "root": "e2e/eslint",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/linter-legacy.test.ts",
                "e2e-ci--src/linter.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/eslint",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/linter-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/eslint",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/linter-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/linter-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/linter.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/eslint",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/linter.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/linter.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/linter-legacy.test.ts",
                "e2e-ci--src/linter.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-eslint",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/eslint",
          "projectType": "application",
          "implicitDependencies": ["eslint"],
          "tags": []
        }
      },
      "e2e-gradle": {
        "name": "e2e-gradle",
        "type": "app",
        "data": {
          "root": "e2e/gradle",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/gradle-import.test.ts",
                "e2e-ci--src/gradle-plugin-v1.test.ts",
                "e2e-ci--src/gradle.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/gradle",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/gradle-import.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/gradle",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/gradle-import.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/gradle-import.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/gradle-plugin-v1.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/gradle",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/gradle-plugin-v1.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/gradle-plugin-v1.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/gradle.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/gradle",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/gradle.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/gradle.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/gradle-import.test.ts",
                "e2e-ci--src/gradle-plugin-v1.test.ts",
                "e2e-ci--src/gradle.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-gradle",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/gradle",
          "projectType": "application",
          "implicitDependencies": ["gradle"],
          "tags": []
        }
      },
      "e2e-plugin": {
        "name": "e2e-plugin",
        "type": "app",
        "data": {
          "root": "e2e/plugin",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/nx-plugin-ts-solution.test.ts",
                "e2e-ci--src/nx-plugin.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/plugin",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nx-plugin-ts-solution.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/plugin",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nx-plugin-ts-solution.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nx-plugin-ts-solution.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nx-plugin.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/plugin",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nx-plugin.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nx-plugin.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/nx-plugin-ts-solution.test.ts",
                "e2e-ci--src/nx-plugin.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-plugin",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/plugin",
          "projectType": "application",
          "implicitDependencies": ["create-nx-plugin"],
          "tags": []
        }
      },
      "e2e-rollup": {
        "name": "e2e-rollup",
        "type": "app",
        "data": {
          "root": "e2e/rollup",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/rollup-legacy.test.ts",
                "e2e-ci--src/rollup.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/rollup",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/rollup-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/rollup",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/rollup-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/rollup-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/rollup.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/rollup",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/rollup.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/rollup.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/rollup-legacy.test.ts",
                "e2e-ci--src/rollup.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-rollup",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/rollup",
          "projectType": "application",
          "implicitDependencies": ["rollup", "js"],
          "tags": []
        }
      },
      "e2e-rspack": {
        "name": "e2e-rspack",
        "type": "app",
        "data": {
          "root": "e2e/rspack",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--tests/rspack.legacy.spec.ts",
                "e2e-ci--tests/rspack.spec.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/rspack",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": ["{workspaceRoot}/coverage/e2e/e2e-rspack"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--tests/rspack.legacy.spec.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": ["{workspaceRoot}/coverage/e2e/e2e-rspack"],
              "options": {
                "cwd": "e2e/rspack",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest tests/rspack.legacy.spec.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in tests/rspack.legacy.spec.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--tests/rspack.spec.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": ["{workspaceRoot}/coverage/e2e/e2e-rspack"],
              "options": {
                "cwd": "e2e/rspack",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest tests/rspack.spec.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in tests/rspack.spec.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": ["{workspaceRoot}/coverage/e2e/e2e-rspack"],
              "dependsOn": [
                "e2e-ci--tests/rspack.legacy.spec.ts",
                "e2e-ci--tests/rspack.spec.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-rspack",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "e2e/rspack",
          "tags": [],
          "implicitDependencies": ["rspack"]
        }
      },
      "e2e-detox": {
        "name": "e2e-detox",
        "type": "app",
        "data": {
          "root": "e2e/detox",
          "metadata": {
            "targetGroups": {
              "E2E MACOS (CI)": [
                "e2e-macos-ci",
                "e2e-macos-ci--src/detox-legacy.test.ts",
                "e2e-macos-ci--src/detox.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-macos-local": {
              "options": {
                "cwd": "e2e/detox",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-macos-ci--src/detox-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/detox-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "dependsOn": [
                "nx:build-native",
                "@nx/nx-source:populate-local-registry-storage"
              ],
              "options": {
                "cwd": "e2e/detox",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/detox-legacy.test.ts"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-macos-ci--src/detox.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/detox.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "dependsOn": [
                "nx:build-native",
                "@nx/nx-source:populate-local-registry-storage"
              ],
              "options": {
                "cwd": "e2e/detox",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/detox.test.ts"
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e-macos-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-macos-ci--src/detox-legacy.test.ts",
                "e2e-macos-ci--src/detox.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-macos-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-detox",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/detox",
          "projectType": "application",
          "implicitDependencies": ["detox"],
          "tags": []
        }
      },
      "e2e-react": {
        "name": "e2e-react",
        "type": "app",
        "data": {
          "root": "e2e/react",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/cypress-component-tests.test.ts",
                "e2e-ci--src/module-federation/core.rspack.test.ts",
                "e2e-ci--src/module-federation/core.webpack.test.ts",
                "e2e-ci--src/module-federation/dynamic-federation.rspack.test.ts",
                "e2e-ci--src/module-federation/dynamic-federation.webpack.test.ts",
                "e2e-ci--src/module-federation/federate-module.rspack.test.ts",
                "e2e-ci--src/module-federation/federate-module.webpack.test.ts",
                "e2e-ci--src/module-federation/independent-deployability.rspack.test.ts",
                "e2e-ci--src/module-federation/independent-deployability.webpack.test.ts",
                "e2e-ci--src/module-federation/misc.rspack.test.ts",
                "e2e-ci--src/module-federation/ssr.rspack.test.ts",
                "e2e-ci--src/playwright.test.ts",
                "e2e-ci--src/react-package-legacy.test.ts",
                "e2e-ci--src/react-package.test.ts",
                "e2e-ci--src/react-router.test.ts",
                "e2e-ci--src/react-rsbuild.test.ts",
                "e2e-ci--src/react-rspack.test.ts",
                "e2e-ci--src/react-ts-solution.test.ts",
                "e2e-ci--src/react-vite.test.ts",
                "e2e-ci--src/react-webpack.test.ts",
                "e2e-ci--src/react.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/cypress-component-tests.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/cypress-component-tests.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/cypress-component-tests.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation/core.rspack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation/core.rspack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation/core.rspack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation/core.webpack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation/core.webpack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation/core.webpack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation/dynamic-federation.rspack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation/dynamic-federation.rspack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation/dynamic-federation.rspack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation/dynamic-federation.webpack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation/dynamic-federation.webpack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation/dynamic-federation.webpack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation/federate-module.rspack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation/federate-module.rspack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation/federate-module.rspack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation/federate-module.webpack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation/federate-module.webpack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation/federate-module.webpack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation/independent-deployability.rspack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation/independent-deployability.rspack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation/independent-deployability.rspack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation/independent-deployability.webpack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation/independent-deployability.webpack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation/independent-deployability.webpack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation/misc.rspack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation/misc.rspack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation/misc.rspack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/module-federation/ssr.rspack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/module-federation/ssr.rspack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/module-federation/ssr.rspack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/playwright.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/playwright.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/playwright.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/react-package-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react-package-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react-package-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/react-package.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react-package.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react-package.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/react-router.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react-router.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react-router.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/react-rsbuild.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react-rsbuild.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react-rsbuild.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/react-rspack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react-rspack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react-rspack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/react-ts-solution.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react-ts-solution.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react-ts-solution.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/react-vite.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react-vite.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react-vite.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/react-webpack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react-webpack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react-webpack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/react.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/react",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/react.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/react.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/cypress-component-tests.test.ts",
                "e2e-ci--src/module-federation/core.rspack.test.ts",
                "e2e-ci--src/module-federation/core.webpack.test.ts",
                "e2e-ci--src/module-federation/dynamic-federation.rspack.test.ts",
                "e2e-ci--src/module-federation/dynamic-federation.webpack.test.ts",
                "e2e-ci--src/module-federation/federate-module.rspack.test.ts",
                "e2e-ci--src/module-federation/federate-module.webpack.test.ts",
                "e2e-ci--src/module-federation/independent-deployability.rspack.test.ts",
                "e2e-ci--src/module-federation/independent-deployability.webpack.test.ts",
                "e2e-ci--src/module-federation/misc.rspack.test.ts",
                "e2e-ci--src/module-federation/ssr.rspack.test.ts",
                "e2e-ci--src/playwright.test.ts",
                "e2e-ci--src/react-package-legacy.test.ts",
                "e2e-ci--src/react-package.test.ts",
                "e2e-ci--src/react-router.test.ts",
                "e2e-ci--src/react-rsbuild.test.ts",
                "e2e-ci--src/react-rspack.test.ts",
                "e2e-ci--src/react-ts-solution.test.ts",
                "e2e-ci--src/react-vite.test.ts",
                "e2e-ci--src/react-webpack.test.ts",
                "e2e-ci--src/react.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-react",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/react",
          "projectType": "application",
          "implicitDependencies": ["react", "rspack"],
          "tags": []
        }
      },
      "e2e-remix": {
        "name": "e2e-remix",
        "type": "app",
        "data": {
          "root": "e2e/remix",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/nx-remix.test.ts",
                "e2e-ci--src/remix-ts-solution.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/remix",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nx-remix.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/remix",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nx-remix.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nx-remix.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/remix-ts-solution.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/remix",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/remix-ts-solution.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/remix-ts-solution.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/nx-remix.test.ts",
                "e2e-ci--src/remix-ts-solution.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-remix",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/remix",
          "projectType": "application",
          "implicitDependencies": ["remix"],
          "tags": []
        }
      },
      "e2e-utils": {
        "name": "e2e-utils",
        "type": "lib",
        "data": {
          "root": "e2e/utils",
          "name": "e2e-utils",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/utils",
          "projectType": "library",
          "targets": {},
          "implicitDependencies": [],
          "tags": []
        }
      },
      "e2e-expo": {
        "name": "e2e-expo",
        "type": "app",
        "data": {
          "root": "e2e/expo",
          "metadata": {
            "targetGroups": {
              "E2E MACOS (CI)": [
                "e2e-macos-ci",
                "e2e-macos-ci--src/expo-legacy.test.ts",
                "e2e-macos-ci--src/expo.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-macos-local": {
              "options": {
                "cwd": "e2e/expo",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-macos-ci--src/expo-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/expo-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "e2e/expo",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/expo-legacy.test.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-macos-ci--src/expo.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/expo.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "e2e/expo",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/expo.test.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-macos-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-macos-ci--src/expo-legacy.test.ts",
                "e2e-macos-ci--src/expo.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-macos-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-expo",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/expo",
          "projectType": "application",
          "implicitDependencies": ["expo"],
          "tags": []
        }
      },
      "e2e-jest": {
        "name": "e2e-jest",
        "type": "app",
        "data": {
          "root": "e2e/jest",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/jest-legacy.test.ts",
                "e2e-ci--src/jest-root.test.ts",
                "e2e-ci--src/jest.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/jest",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/jest-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/jest",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/jest-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/jest-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/jest-root.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/jest",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/jest-root.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/jest-root.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/jest.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/jest",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/jest.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/jest.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/jest-legacy.test.ts",
                "e2e-ci--src/jest-root.test.ts",
                "e2e-ci--src/jest.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-jest",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/jest",
          "projectType": "application",
          "implicitDependencies": ["jest"],
          "tags": []
        }
      },
      "e2e-next": {
        "name": "e2e-next",
        "type": "app",
        "data": {
          "root": "e2e/next",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/next-appdir.test.ts",
                "e2e-ci--src/next-component-tests.test.ts",
                "e2e-ci--src/next-legacy.test.ts",
                "e2e-ci--src/next-playwright-standalone-eslint.test.ts",
                "e2e-ci--src/next-playwright.test.ts",
                "e2e-ci--src/next-storybook.test.ts",
                "e2e-ci--src/next-styles.test.ts",
                "e2e-ci--src/next-svgr.test.ts",
                "e2e-ci--src/next-ts-solutions.test.ts",
                "e2e-ci--src/next-webpack.test.ts",
                "e2e-ci--src/next.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next-appdir.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next-appdir.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next-appdir.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next-component-tests.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next-component-tests.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next-component-tests.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next-playwright-standalone-eslint.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next-playwright-standalone-eslint.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next-playwright-standalone-eslint.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next-playwright.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next-playwright.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next-playwright.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next-storybook.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next-storybook.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next-storybook.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next-styles.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next-styles.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next-styles.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next-svgr.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next-svgr.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next-svgr.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next-ts-solutions.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next-ts-solutions.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next-ts-solutions.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next-webpack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next-webpack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next-webpack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/next.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/next",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/next.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/next.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/next-appdir.test.ts",
                "e2e-ci--src/next-component-tests.test.ts",
                "e2e-ci--src/next-legacy.test.ts",
                "e2e-ci--src/next-playwright-standalone-eslint.test.ts",
                "e2e-ci--src/next-playwright.test.ts",
                "e2e-ci--src/next-storybook.test.ts",
                "e2e-ci--src/next-styles.test.ts",
                "e2e-ci--src/next-svgr.test.ts",
                "e2e-ci--src/next-ts-solutions.test.ts",
                "e2e-ci--src/next-webpack.test.ts",
                "e2e-ci--src/next.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-next",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/next/src",
          "projectType": "application",
          "implicitDependencies": ["next"],
          "tags": []
        }
      },
      "e2e-node": {
        "name": "e2e-node",
        "type": "app",
        "data": {
          "root": "e2e/node",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/node-esbuild.test.ts",
                "e2e-ci--src/node-server.test.ts",
                "e2e-ci--src/node-ts-solution-esbuild.test.ts",
                "e2e-ci--src/node-ts-solution.test.ts",
                "e2e-ci--src/node-webpack.test.ts",
                "e2e-ci--src/node.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/node",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/node-esbuild.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/node",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/node-esbuild.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/node-esbuild.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/node-server.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/node",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/node-server.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/node-server.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/node-ts-solution-esbuild.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/node",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/node-ts-solution-esbuild.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/node-ts-solution-esbuild.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/node-ts-solution.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/node",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/node-ts-solution.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/node-ts-solution.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/node-webpack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/node",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/node-webpack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/node-webpack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/node.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/node",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/node.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/node.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/node-esbuild.test.ts",
                "e2e-ci--src/node-server.test.ts",
                "e2e-ci--src/node-ts-solution-esbuild.test.ts",
                "e2e-ci--src/node-ts-solution.test.ts",
                "e2e-ci--src/node-webpack.test.ts",
                "e2e-ci--src/node.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "e2e-ci--src/webpack.test.ts": {
              "dependsOn": [
                "nx:build-native",
                "@nx/nx-source:populate-local-registry-storage"
              ],
              "inputs": ["e2eInputs"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            }
          },
          "name": "e2e-node",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/node",
          "projectType": "application",
          "implicitDependencies": ["node", "nest", "webpack"],
          "tags": []
        }
      },
      "e2e-nuxt": {
        "name": "e2e-nuxt",
        "type": "app",
        "data": {
          "root": "e2e/nuxt",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": ["e2e-ci", "e2e-ci--src/nuxt.test.ts"]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/nuxt",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nuxt.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nuxt",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nuxt.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nuxt.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": ["e2e-ci--src/nuxt.test.ts"],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-nuxt",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/nuxt",
          "projectType": "application",
          "implicitDependencies": ["nuxt"],
          "tags": []
        }
      },
      "e2e-vite": {
        "name": "e2e-vite",
        "type": "app",
        "data": {
          "root": "e2e/vite",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/vite-esm.test.ts",
                "e2e-ci--src/vite-legacy.test.ts",
                "e2e-ci--src/vite-ts-solution.test.ts",
                "e2e-ci--src/vite.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/vite",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/vite-esm.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/vite",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/vite-esm.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/vite-esm.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/vite-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/vite",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/vite-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/vite-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/vite-ts-solution.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/vite",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/vite-ts-solution.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/vite-ts-solution.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/vite.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/vite",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/vite.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/vite.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/vite-esm.test.ts",
                "e2e-ci--src/vite-legacy.test.ts",
                "e2e-ci--src/vite-ts-solution.test.ts",
                "e2e-ci--src/vite.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-vite",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/vite",
          "projectType": "application",
          "implicitDependencies": ["vite"],
          "tags": []
        }
      },
      "e2e-vue": {
        "name": "e2e-vue",
        "type": "app",
        "data": {
          "root": "e2e/vue",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/vue-legacy.test.ts",
                "e2e-ci--src/vue-storybook.test.ts",
                "e2e-ci--src/vue-tailwind.test.ts",
                "e2e-ci--src/vue-ts-solution.test.ts",
                "e2e-ci--src/vue.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/vue",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/vue-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/vue",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/vue-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/vue-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/vue-storybook.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/vue",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/vue-storybook.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/vue-storybook.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/vue-tailwind.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/vue",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/vue-tailwind.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/vue-tailwind.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/vue-ts-solution.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/vue",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/vue-ts-solution.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/vue-ts-solution.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/vue.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/vue",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/vue.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/vue.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/vue-legacy.test.ts",
                "e2e-ci--src/vue-storybook.test.ts",
                "e2e-ci--src/vue-tailwind.test.ts",
                "e2e-ci--src/vue-ts-solution.test.ts",
                "e2e-ci--src/vue.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-vue",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/vue",
          "projectType": "application",
          "implicitDependencies": ["vue"],
          "tags": []
        }
      },
      "e2e-web": {
        "name": "e2e-web",
        "type": "app",
        "data": {
          "root": "e2e/web",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/file-server-legacy.test.ts",
                "e2e-ci--src/file-server.test.ts",
                "e2e-ci--src/web-legacy.test.ts",
                "e2e-ci--src/web-vite.test.ts",
                "e2e-ci--src/web-webpack.test.ts",
                "e2e-ci--src/web.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/web",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/file-server-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/web",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/file-server-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/file-server-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/file-server.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/web",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/file-server.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/file-server.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/web-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/web",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/web-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/web-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/web-vite.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/web",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/web-vite.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/web-vite.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/web-webpack.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/web",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/web-webpack.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/web-webpack.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/web.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/web",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/web.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/web.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/file-server-legacy.test.ts",
                "e2e-ci--src/file-server.test.ts",
                "e2e-ci--src/web-legacy.test.ts",
                "e2e-ci--src/web-vite.test.ts",
                "e2e-ci--src/web-webpack.test.ts",
                "e2e-ci--src/web.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "e2e-web",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/web",
          "projectType": "application",
          "implicitDependencies": ["web"],
          "tags": []
        }
      },
      "e2e-js": {
        "name": "e2e-js",
        "type": "app",
        "data": {
          "root": "e2e/js",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/js-executor-node.test.ts",
                "e2e-ci--src/js-executor-swc.test.ts",
                "e2e-ci--src/js-executor-tsc.test.ts",
                "e2e-ci--src/js-inlining.test.ts",
                "e2e-ci--src/js-packaging.test.ts",
                "e2e-ci--src/js-ts-solution.test.ts"
              ]
            }
          },
          "targets": {
            "e2e-local": {
              "options": {
                "cwd": "e2e/js",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/js-executor-node.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/js",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/js-executor-node.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/js-executor-node.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/js-executor-swc.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/js",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/js-executor-swc.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/js-executor-swc.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/js-executor-tsc.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/js",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/js-executor-tsc.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/js-executor-tsc.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/js-inlining.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/js",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/js-inlining.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/js-inlining.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/js-packaging.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/js",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/js-packaging.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/js-packaging.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/js-ts-solution.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/js",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/js-ts-solution.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/js-ts-solution.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/js-executor-node.test.ts",
                "e2e-ci--src/js-executor-swc.test.ts",
                "e2e-ci--src/js-executor-tsc.test.ts",
                "e2e-ci--src/js-inlining.test.ts",
                "e2e-ci--src/js-packaging.test.ts",
                "e2e-ci--src/js-ts-solution.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "e2e-ci--src/js-generators.test.ts": {
              "dependsOn": [
                "nx:build-native",
                "@nx/nx-source:populate-local-registry-storage"
              ],
              "inputs": ["e2eInputs"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            }
          },
          "name": "e2e-js",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/js",
          "projectType": "application",
          "implicitDependencies": ["jest"],
          "tags": []
        }
      },
      "e2e-nx": {
        "name": "e2e-nx",
        "type": "app",
        "data": {
          "root": "e2e/nx",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "e2e/nx",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["build-native", "^build-native"]
            },
            "e2e-local": {
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/affected-graph.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/affected-graph.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/affected-graph.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/cache.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/cache.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/cache.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/extras.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/extras.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/extras.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/graph-ts-solution.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/graph-ts-solution.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/graph-ts-solution.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/import.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/import.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/import.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/invoke-runner.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/invoke-runner.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/invoke-runner.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/misc.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/misc.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/misc.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nx-cloud.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nx-cloud.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nx-cloud.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/nxw.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/nxw.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/nxw.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/run.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/run.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/run.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/watch.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/watch.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/watch.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/workspace-legacy.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/workspace-legacy.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/workspace-legacy.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci--src/workspace.test.ts": {
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "options": {
                "cwd": "e2e/nx",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest src/workspace.test.ts"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in src/workspace.test.ts",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "@nx/nx-source:populate-local-registry-storage",
                "@nx/nx-source:local-registry"
              ]
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": ["e2eInputs", "^production"],
              "outputs": [],
              "dependsOn": [
                "e2e-ci--src/affected-graph.test.ts",
                "e2e-ci--src/cache.test.ts",
                "e2e-ci--src/extras.test.ts",
                "e2e-ci--src/graph-ts-solution.test.ts",
                "e2e-ci--src/import.test.ts",
                "e2e-ci--src/invoke-runner.test.ts",
                "e2e-ci--src/misc.test.ts",
                "e2e-ci--src/nx-cloud.test.ts",
                "e2e-ci--src/nxw.test.ts",
                "e2e-ci--src/run.test.ts",
                "e2e-ci--src/watch.test.ts",
                "e2e-ci--src/workspace-legacy.test.ts",
                "e2e-ci--src/workspace.test.ts"
              ],
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests in CI",
                "nonAtomizedTarget": "e2e-local",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci",
                "e2e-ci--src/affected-graph.test.ts",
                "e2e-ci--src/cache.test.ts",
                "e2e-ci--src/extras.test.ts",
                "e2e-ci--src/graph-ts-solution.test.ts",
                "e2e-ci--src/import.test.ts",
                "e2e-ci--src/invoke-runner.test.ts",
                "e2e-ci--src/misc.test.ts",
                "e2e-ci--src/nx-cloud.test.ts",
                "e2e-ci--src/nxw.test.ts",
                "e2e-ci--src/run.test.ts",
                "e2e-ci--src/watch.test.ts",
                "e2e-ci--src/workspace-legacy.test.ts",
                "e2e-ci--src/workspace.test.ts"
              ]
            }
          },
          "name": "e2e-nx",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "e2e/nx",
          "projectType": "application",
          "implicitDependencies": ["nx", "js"],
          "tags": []
        }
      },
      "docs": {
        "name": "docs",
        "type": "lib",
        "data": {
          "root": "docs",
          "name": "docs",
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "docs",
          "projectType": "library",
          "tags": ["scope:nx-dev"],
          "implicitDependencies": [],
          "targets": {}
        }
      },
      "@nx/nx-source": {
        "name": "@nx/nx-source",
        "type": "lib",
        "data": {
          "root": ".",
          "name": "@nx/nx-source",
          "includedScripts": [
            "lint-pnpm-lock",
            "echo",
            "check-commit",
            "check-format",
            "check-format:quick",
            "check-imports",
            "check-lock-files",
            "check-codeowners"
          ],
          "tags": ["npm:private"],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "lint-pnpm-lock",
                "echo",
                "check-commit",
                "check-format",
                "check-format:quick",
                "check-imports",
                "check-lock-files",
                "check-codeowners"
              ]
            },
            "description": "Smart Repos · Fast Builds",
            "js": {
              "packageName": "@nx/nx-source",
              "isInPackageManagerWorkspaces": true
            },
            "jsPackageName": "@nx/nx-source"
          },
          "targets": {
            "lint-pnpm-lock": {
              "executor": "nx:run-script",
              "metadata": {
                "scriptContent": "eslint pnpm-lock.yaml",
                "runCommand": "pnpm run lint-pnpm-lock"
              },
              "cache": true,
              "inputs": ["{projectRoot}/pnpm-lock.yaml"],
              "options": {
                "script": "lint-pnpm-lock"
              },
              "configurations": {},
              "parallelism": true
            },
            "echo": {
              "executor": "nx:run-script",
              "options": {
                "script": "echo"
              },
              "metadata": {
                "scriptContent": "echo 123458",
                "runCommand": "pnpm run echo"
              },
              "configurations": {},
              "parallelism": true
            },
            "check-commit": {
              "executor": "nx:run-script",
              "options": {
                "script": "check-commit"
              },
              "metadata": {
                "scriptContent": "node ./scripts/commit-lint.js",
                "runCommand": "pnpm run check-commit"
              },
              "configurations": {},
              "parallelism": true
            },
            "check-format": {
              "executor": "nx:run-script",
              "options": {
                "script": "check-format"
              },
              "metadata": {
                "scriptContent": "nx format:check --all",
                "runCommand": "pnpm run check-format"
              },
              "configurations": {},
              "parallelism": true
            },
            "check-format:quick": {
              "executor": "nx:run-script",
              "metadata": {
                "scriptContent": "pretty-quick --check",
                "runCommand": "pnpm run check-format:quick"
              },
              "parallelism": false,
              "options": {
                "script": "check-format:quick"
              },
              "configurations": {}
            },
            "check-imports": {
              "executor": "nx:run-script",
              "options": {
                "script": "check-imports"
              },
              "metadata": {
                "scriptContent": "node ./scripts/check-imports.js",
                "runCommand": "pnpm run check-imports"
              },
              "configurations": {},
              "parallelism": true
            },
            "check-lock-files": {
              "executor": "nx:run-script",
              "options": {
                "script": "check-lock-files"
              },
              "metadata": {
                "scriptContent": "node ./scripts/check-lock-files.js",
                "runCommand": "pnpm run check-lock-files"
              },
              "configurations": {},
              "parallelism": true
            },
            "check-codeowners": {
              "executor": "nx:run-script",
              "options": {
                "script": "check-codeowners"
              },
              "metadata": {
                "scriptContent": "ts-node -P ./scripts/tsconfig.scripts.json ./scripts/check-codeowners.ts",
                "runCommand": "pnpm run check-codeowners"
              },
              "configurations": {},
              "parallelism": true
            },
            "local-registry": {
              "executor": "@nx/js:verdaccio",
              "options": {
                "port": 4873,
                "config": ".verdaccio/config.yml",
                "storage": "build/local-registry/storage",
                "clear": false
              },
              "configurations": {},
              "parallelism": true,
              "continuous": true
            },
            "populate-local-registry-storage": {
              "cache": true,
              "inputs": [
                {
                  "input": "production",
                  "projects": ["tag:npm:public"]
                },
                "{workspaceRoot}/scripts/local-registry"
              ],
              "dependsOn": [
                "local-registry",
                {
                  "target": "build",
                  "projects": ["tag:npm:public"]
                }
              ],
              "outputs": ["{workspaceRoot}/build/local-registry/storage"],
              "executor": "nx:run-commands",
              "options": {
                "command": "node ./scripts/local-registry/run-populate-storage.mjs"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release": {
              "dependsOn": [
                {
                  "target": "build",
                  "projects": ["tag:npm:public"]
                }
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "ts-node -P ./scripts/tsconfig.release.json ./scripts/nx-release.ts"
              },
              "configurations": {},
              "parallelism": true
            },
            "documentation": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "ts-node -P scripts/tsconfig.scripts.json ./scripts/documentation/generators/main.ts",
                  "pnpm check-documentation-map"
                ],
                "parallel": false
              },
              "cache": true,
              "inputs": [
                "{workspaceRoot}/packages/**",
                "{workspaceRoot}/docs/**",
                "{workspaceRoot}/scripts/documentation/**",
                "!{workspaceRoot}/docs/external-generated",
                "!{workspaceRoot}/docs/generated",
                "!{workspaceRoot}/packages/**/*.spec.ts",
                "!{workspaceRoot}/packages/**/project.json",
                "!{workspaceRoot}/packages/**/tsconfig.json",
                "!{workspaceRoot}/packages/**/tsconfig.lib.json",
                "!{workspaceRoot}/packages/**/tsconfig.spec.json",
                "!{workspaceRoot}/packages/**/jest.config.{ts,js}",
                "!{workspaceRoot}/packages/**/.eslintrc.json"
              ],
              "dependsOn": [
                {
                  "target": "build",
                  "projects": ["devkit", "typedoc-theme"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/docs/external-generated",
                "{workspaceRoot}/docs/generated"
              ],
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "dependsOn": ["@nx/nx-source:lint-pnpm-lock"],
              "cache": true,
              "inputs": ["{projectRoot}/pnpm-lock.yaml"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "prepush": {
              "dependsOn": [
                "nx:format-native",
                "nx:lint-native",
                "documentation",
                "check-commit",
                "check-format:quick",
                "check-lock-files"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            }
          },
          "$schema": "node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "linux-arm-gnueabihf": [],
      "linux-arm64-musl": [],
      "win32-arm64-msvc": [],
      "linux-arm64-gnu": [],
      "linux-x64-musl": [],
      "win32-x64-msvc": [],
      "linux-x64-gnu": [],
      "darwin-arm64": [],
      "freebsd-x64": [],
      "darwin-x64": [],
      "tools-documentation-create-embeddings": [
        {
          "source": "tools-documentation-create-embeddings",
          "target": "docs",
          "type": "static"
        }
      ],
      "nx-dev-feature-package-schema-viewer": [
        {
          "source": "nx-dev-feature-package-schema-viewer",
          "target": "nx-dev-data-access-packages",
          "type": "static"
        },
        {
          "source": "nx-dev-feature-package-schema-viewer",
          "target": "nx-dev-models-package",
          "type": "static"
        },
        {
          "source": "nx-dev-feature-package-schema-viewer",
          "target": "nx-dev-ui-markdoc",
          "type": "static"
        },
        {
          "source": "nx-dev-feature-package-schema-viewer",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "nx-dev-feature-package-schema-viewer",
          "target": "nx-dev-models-document",
          "type": "static"
        }
      ],
      "gradle-project-graph": [],
      "create-nx-workspace": [
        {
          "source": "create-nx-workspace",
          "target": "workspace",
          "type": "implicit"
        },
        {
          "source": "create-nx-workspace",
          "target": "js",
          "type": "implicit"
        },
        {
          "source": "create-nx-workspace",
          "target": "react",
          "type": "implicit"
        },
        {
          "source": "create-nx-workspace",
          "target": "expo",
          "type": "implicit"
        },
        {
          "source": "create-nx-workspace",
          "target": "next",
          "type": "implicit"
        },
        {
          "source": "create-nx-workspace",
          "target": "angular",
          "type": "implicit"
        },
        {
          "source": "create-nx-workspace",
          "target": "nest",
          "type": "implicit"
        },
        {
          "source": "create-nx-workspace",
          "target": "express",
          "type": "implicit"
        },
        {
          "source": "create-nx-workspace",
          "target": "vue",
          "type": "implicit"
        }
      ],
      "gradle-batch-runner": [],
      "nx-dev-data-access-documents": [
        {
          "source": "nx-dev-data-access-documents",
          "target": "nx-dev-ui-markdoc",
          "type": "static"
        },
        {
          "source": "nx-dev-data-access-documents",
          "target": "nx-dev-models-document",
          "type": "static"
        },
        {
          "source": "nx-dev-data-access-documents",
          "target": "nx-dev-models-package",
          "type": "static"
        }
      ],
      "nx-dev-ui-scrollable-content": [],
      "nx-dev-data-access-packages": [
        {
          "source": "nx-dev-data-access-packages",
          "target": "nx-dev-models-package",
          "type": "static"
        },
        {
          "source": "nx-dev-data-access-packages",
          "target": "nx-dev-models-document",
          "type": "static"
        }
      ],
      "data-access-careers": [],
      "data-access-courses": [
        {
          "source": "data-access-courses",
          "target": "nx-dev-ui-markdoc",
          "type": "static"
        }
      ],
      "module-federation": [
        {
          "source": "module-federation",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "module-federation",
          "target": "js",
          "type": "static"
        },
        {
          "source": "module-federation",
          "target": "web",
          "type": "static"
        }
      ],
      "create-nx-plugin": [
        {
          "source": "create-nx-plugin",
          "target": "plugin",
          "type": "implicit"
        },
        {
          "source": "create-nx-plugin",
          "target": "create-nx-workspace",
          "type": "static"
        }
      ],
      "nx-dev-feature-doc-viewer": [
        {
          "source": "nx-dev-feature-doc-viewer",
          "target": "nx-dev-models-document",
          "type": "static"
        },
        {
          "source": "nx-dev-feature-doc-viewer",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "nx-dev-feature-doc-viewer",
          "target": "nx-dev-ui-markdoc",
          "type": "static"
        }
      ],
      "ui-ai-landing-page": [
        {
          "source": "ui-ai-landing-page",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-ai-landing-page",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "graph-ui-project-details": [
        {
          "source": "graph-ui-project-details",
          "target": "graph-ui-code-block",
          "type": "static"
        },
        {
          "source": "graph-ui-project-details",
          "target": "nx-dev-ui-fence",
          "type": "static"
        }
      ],
      "nx-dev-feature-analytics": [],
      "feature-feedback": [
        {
          "source": "feature-feedback",
          "target": "nx-dev-ui-common",
          "type": "static"
        }
      ],
      "nx-dev-data-access-menu": [],
      "ui-video-courses": [
        {
          "source": "ui-video-courses",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-video-courses",
          "target": "data-access-courses",
          "type": "static"
        }
      ],
      "eslint-plugin": [
        {
          "source": "eslint-plugin",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "eslint-plugin",
          "target": "js",
          "type": "static"
        }
      ],
      "nx-dev-models-document": [],
      "nx-dev-ui-sponsor-card": [],
      "ui-remote-cache": [
        {
          "source": "ui-remote-cache",
          "target": "nx-dev-ui-common",
          "type": "static"
        }
      ],
      "workspace-plugin": [],
      "e2e-lerna-smoke-tests": [
        {
          "source": "e2e-lerna-smoke-tests",
          "target": "nx",
          "type": "implicit"
        },
        {
          "source": "e2e-lerna-smoke-tests",
          "target": "devkit",
          "type": "implicit"
        }
      ],
      "graph-project-details": [
        {
          "source": "graph-project-details",
          "target": "ui-theme",
          "type": "static"
        },
        {
          "source": "graph-project-details",
          "target": "graph-ui-project-details",
          "type": "static"
        }
      ],
      "nx-dev-feature-search": [],
      "nx-dev-models-package": [
        {
          "source": "nx-dev-models-package",
          "target": "nx-dev-models-document",
          "type": "static"
        }
      ],
      "nx-dev-ui-member-card": [],
      "react-native": [
        {
          "source": "react-native",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "react-native",
          "target": "jest",
          "type": "static"
        },
        {
          "source": "react-native",
          "target": "js",
          "type": "static"
        },
        {
          "source": "react-native",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "react-native",
          "target": "react",
          "type": "static"
        },
        {
          "source": "react-native",
          "target": "workspace",
          "type": "static"
        },
        {
          "source": "react-native",
          "target": "detox",
          "type": "static"
        }
      ],
      "e2e-workspace-create": [
        {
          "source": "e2e-workspace-create",
          "target": "create-nx-workspace",
          "type": "implicit"
        }
      ],
      "nx-dev-ui-animations": [],
      "nx-dev-ui-conference": [
        {
          "source": "nx-dev-ui-conference",
          "target": "nx-dev-ui-common",
          "type": "static"
        }
      ],
      "nx-dev-ui-enterprise": [
        {
          "source": "nx-dev-ui-enterprise",
          "target": "nx-dev-ui-icons",
          "type": "static"
        },
        {
          "source": "nx-dev-ui-enterprise",
          "target": "nx-dev-ui-common",
          "type": "static"
        }
      ],
      "nx-dev-ui-primitives": [],
      "nx-dev-ui-references": [],
      "graph-ui-code-block": [],
      "nx-dev-ui-community": [
        {
          "source": "nx-dev-ui-community",
          "target": "nx-dev-ui-common",
          "type": "static"
        }
      ],
      "playwright": [
        {
          "source": "playwright",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "playwright",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "playwright",
          "target": "js",
          "type": "static"
        }
      ],
      "ui-customers": [
        {
          "source": "ui-customers",
          "target": "nx-dev-ui-icons",
          "type": "static"
        },
        {
          "source": "ui-customers",
          "target": "nx-dev-ui-common",
          "type": "static"
        }
      ],
      "ui-powerpack": [
        {
          "source": "ui-powerpack",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-powerpack",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "eslint-rules": [],
      "nx-dev-models-menu": [],
      "nx-dev-ui-commands": [],
      "storybook": [
        {
          "source": "storybook",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "storybook",
          "target": "cypress",
          "type": "static"
        },
        {
          "source": "storybook",
          "target": "js",
          "type": "static"
        },
        {
          "source": "storybook",
          "target": "eslint",
          "type": "static"
        }
      ],
      "ui-partners": [
        {
          "source": "ui-partners",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-partners",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "workspace": [
        {
          "source": "workspace",
          "target": "devkit",
          "type": "static"
        }
      ],
      "nx-dev-e2e": [
        {
          "source": "nx-dev-e2e",
          "target": "nx-dev",
          "type": "implicit"
        }
      ],
      "nx-dev-feature-ai": [
        {
          "source": "nx-dev-feature-ai",
          "target": "nx-dev-util-ai",
          "type": "static"
        },
        {
          "source": "nx-dev-feature-ai",
          "target": "nx-dev-ui-markdoc",
          "type": "static"
        },
        {
          "source": "nx-dev-feature-ai",
          "target": "nx-dev-ui-common",
          "type": "static"
        }
      ],
      "nx-dev-ui-contact": [
        {
          "source": "nx-dev-ui-contact",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "nx-dev-ui-contact",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "nx-dev-ui-markdoc": [
        {
          "source": "nx-dev-ui-markdoc",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "nx-dev-ui-markdoc",
          "target": "nx-dev-ui-icons",
          "type": "static"
        },
        {
          "source": "nx-dev-ui-markdoc",
          "target": "graph-ui-project-details",
          "type": "static"
        }
      ],
      "ui-careers": [
        {
          "source": "ui-careers",
          "target": "nx-dev-ui-common",
          "type": "static"
        }
      ],
      "ui-company": [
        {
          "source": "ui-company",
          "target": "nx-dev-ui-common",
          "type": "static"
        }
      ],
      "ui-courses": [
        {
          "source": "ui-courses",
          "target": "data-access-courses",
          "type": "static"
        },
        {
          "source": "ui-courses",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-courses",
          "target": "nx-dev-ui-markdoc",
          "type": "static"
        },
        {
          "source": "ui-courses",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "ui-podcast": [
        {
          "source": "ui-podcast",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-podcast",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "ui-pricing": [
        {
          "source": "ui-pricing",
          "target": "nx-dev-ui-icons",
          "type": "static"
        },
        {
          "source": "ui-pricing",
          "target": "nx-dev-ui-common",
          "type": "static"
        }
      ],
      "ui-webinar": [
        {
          "source": "ui-webinar",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-webinar",
          "target": "nx-dev-ui-markdoc",
          "type": "static"
        }
      ],
      "angular": [
        {
          "source": "angular",
          "target": "module-federation",
          "type": "static"
        },
        {
          "source": "angular",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "angular",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "angular",
          "target": "js",
          "type": "static"
        },
        {
          "source": "angular",
          "target": "rspack",
          "type": "static"
        },
        {
          "source": "angular",
          "target": "web",
          "type": "static"
        },
        {
          "source": "angular",
          "target": "webpack",
          "type": "static"
        },
        {
          "source": "angular",
          "target": "workspace",
          "type": "static"
        }
      ],
      "cypress": [
        {
          "source": "cypress",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "cypress",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "cypress",
          "target": "js",
          "type": "static"
        }
      ],
      "e2e-graph-client": [
        {
          "source": "e2e-graph-client",
          "target": "graph-client",
          "type": "implicit"
        },
        {
          "source": "e2e-graph-client",
          "target": "graph-client",
          "type": "static"
        }
      ],
      "e2e-react-native": [
        {
          "source": "e2e-react-native",
          "target": "react-native",
          "type": "implicit"
        },
        {
          "source": "e2e-react-native",
          "target": "e2e-utils",
          "type": "static"
        }
      ],
      "esbuild": [
        {
          "source": "esbuild",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "esbuild",
          "target": "js",
          "type": "static"
        }
      ],
      "express": [
        {
          "source": "express",
          "target": "node",
          "type": "implicit"
        },
        {
          "source": "express",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "express",
          "target": "js",
          "type": "static"
        },
        {
          "source": "express",
          "target": "node",
          "type": "static"
        }
      ],
      "nx-dev-ui-common": [
        {
          "source": "nx-dev-ui-common",
          "target": "nx-dev-models-document",
          "type": "static"
        },
        {
          "source": "nx-dev-ui-common",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "nx-dev-ui-gradle": [
        {
          "source": "nx-dev-ui-gradle",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "nx-dev-ui-gradle",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "rsbuild": [
        {
          "source": "rsbuild",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "rsbuild",
          "target": "js",
          "type": "static"
        }
      ],
      "ui-brands": [
        {
          "source": "ui-brands",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-brands",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "webpack": [
        {
          "source": "webpack",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "webpack",
          "target": "js",
          "type": "static"
        }
      ],
      "devkit": [
        {
          "source": "devkit",
          "target": "nx",
          "type": "static"
        }
      ],
      "eslint": [
        {
          "source": "eslint",
          "target": "eslint-plugin",
          "type": "implicit"
        },
        {
          "source": "eslint",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "eslint",
          "target": "js",
          "type": "static"
        }
      ],
      "gradle": [
        {
          "source": "gradle",
          "target": "devkit",
          "type": "static"
        }
      ],
      "nx-dev-ui-fence": [],
      "nx-dev-ui-icons": [],
      "nx-dev-ui-theme": [],
      "plugin": [
        {
          "source": "plugin",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "plugin",
          "target": "jest",
          "type": "static"
        },
        {
          "source": "plugin",
          "target": "js",
          "type": "static"
        },
        {
          "source": "plugin",
          "target": "eslint",
          "type": "static"
        }
      ],
      "rollup": [
        {
          "source": "rollup",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "rollup",
          "target": "js",
          "type": "static"
        }
      ],
      "rspack": [
        {
          "source": "rspack",
          "target": "module-federation",
          "type": "static"
        },
        {
          "source": "rspack",
          "target": "js",
          "type": "static"
        },
        {
          "source": "rspack",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "rspack",
          "target": "web",
          "type": "static"
        }
      ],
      "tutorial": [],
      "ui-cloud": [
        {
          "source": "ui-cloud",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-cloud",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "ui-common": [],
      "ui-react": [
        {
          "source": "ui-react",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-react",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "detox": [
        {
          "source": "detox",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "detox",
          "target": "jest",
          "type": "static"
        },
        {
          "source": "detox",
          "target": "js",
          "type": "static"
        },
        {
          "source": "detox",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "detox",
          "target": "react",
          "type": "static"
        }
      ],
      "e2e-playwright": [
        {
          "source": "e2e-playwright",
          "target": "playwright",
          "type": "implicit"
        }
      ],
      "nx-dev-ui-home": [
        {
          "source": "nx-dev-ui-home",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "nx-dev-ui-home",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "nx-dev-util-ai": [],
      "react": [
        {
          "source": "react",
          "target": "module-federation",
          "type": "static"
        },
        {
          "source": "react",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "react",
          "target": "js",
          "type": "static"
        },
        {
          "source": "react",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "react",
          "target": "web",
          "type": "static"
        },
        {
          "source": "react",
          "target": "rollup",
          "type": "static"
        }
      ],
      "remix": [
        {
          "source": "remix",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "remix",
          "target": "js",
          "type": "static"
        },
        {
          "source": "remix",
          "target": "react",
          "type": "static"
        }
      ],
      "ui-blog": [
        {
          "source": "ui-blog",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "ui-blog",
          "target": "nx-dev-ui-markdoc",
          "type": "static"
        },
        {
          "source": "ui-blog",
          "target": "nx-dev-ui-icons",
          "type": "static"
        }
      ],
      "ui-theme": [],
      "e2e-storybook": [
        {
          "source": "e2e-storybook",
          "target": "storybook",
          "type": "implicit"
        }
      ],
      "expo": [
        {
          "source": "expo",
          "target": "detox",
          "type": "static"
        },
        {
          "source": "expo",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "expo",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "expo",
          "target": "jest",
          "type": "static"
        },
        {
          "source": "expo",
          "target": "js",
          "type": "static"
        },
        {
          "source": "expo",
          "target": "react",
          "type": "static"
        },
        {
          "source": "expo",
          "target": "web",
          "type": "static"
        },
        {
          "source": "expo",
          "target": "webpack",
          "type": "static"
        }
      ],
      "graph-migrate": [
        {
          "source": "graph-migrate",
          "target": "ui-common",
          "type": "static"
        },
        {
          "source": "graph-migrate",
          "target": "graph-ui-project-details",
          "type": "static"
        }
      ],
      "jest": [
        {
          "source": "jest",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "jest",
          "target": "js",
          "type": "static"
        }
      ],
      "nest": [
        {
          "source": "nest",
          "target": "node",
          "type": "implicit"
        },
        {
          "source": "nest",
          "target": "eslint",
          "type": "implicit"
        },
        {
          "source": "nest",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "nest",
          "target": "js",
          "type": "static"
        },
        {
          "source": "nest",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "nest",
          "target": "node",
          "type": "static"
        }
      ],
      "next": [
        {
          "source": "next",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "next",
          "target": "js",
          "type": "static"
        },
        {
          "source": "next",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "next",
          "target": "react",
          "type": "static"
        },
        {
          "source": "next",
          "target": "web",
          "type": "static"
        },
        {
          "source": "next",
          "target": "webpack",
          "type": "static"
        }
      ],
      "node": [
        {
          "source": "node",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "node",
          "target": "jest",
          "type": "static"
        },
        {
          "source": "node",
          "target": "js",
          "type": "static"
        },
        {
          "source": "node",
          "target": "eslint",
          "type": "static"
        }
      ],
      "nuxt": [
        {
          "source": "nuxt",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "nuxt",
          "target": "js",
          "type": "static"
        },
        {
          "source": "nuxt",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "nuxt",
          "target": "vue",
          "type": "static"
        },
        {
          "source": "nuxt",
          "target": "vite",
          "type": "static"
        }
      ],
      "nx-dev": [
        {
          "source": "nx-dev",
          "target": "docs",
          "type": "implicit"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-ui-common",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-ui-icons",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "data-access-courses",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-util-ai",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-data-access-menu",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-models-package",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-data-access-documents",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-data-access-packages",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "data-access-careers",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-ui-markdoc",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-models-document",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-feature-doc-viewer",
          "type": "static"
        },
        {
          "source": "nx-dev",
          "target": "nx-dev-feature-package-schema-viewer",
          "type": "static"
        }
      ],
      "typedoc-theme": [],
      "vite": [
        {
          "source": "vite",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "vite",
          "target": "js",
          "type": "static"
        }
      ],
      "graph-client": [
        {
          "source": "graph-client",
          "target": "ui-theme",
          "type": "static"
        },
        {
          "source": "graph-client",
          "target": "graph-project-details",
          "type": "static"
        },
        {
          "source": "graph-client",
          "target": "graph-ui-project-details",
          "type": "static"
        },
        {
          "source": "graph-client",
          "target": "graph-migrate",
          "type": "static"
        },
        {
          "source": "graph-client",
          "target": "ui-common",
          "type": "static"
        }
      ],
      "vue": [
        {
          "source": "vue",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "vue",
          "target": "js",
          "type": "static"
        },
        {
          "source": "vue",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "vue",
          "target": "vite",
          "type": "static"
        },
        {
          "source": "vue",
          "target": "web",
          "type": "static"
        }
      ],
      "web": [
        {
          "source": "web",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "web",
          "target": "js",
          "type": "static"
        }
      ],
      "e2e-angular": [
        {
          "source": "e2e-angular",
          "target": "angular",
          "type": "implicit"
        },
        {
          "source": "e2e-angular",
          "target": "e2e-utils",
          "type": "static"
        }
      ],
      "e2e-cypress": [
        {
          "source": "e2e-cypress",
          "target": "cypress",
          "type": "implicit"
        },
        {
          "source": "e2e-cypress",
          "target": "react",
          "type": "implicit"
        }
      ],
      "e2e-esbuild": [
        {
          "source": "e2e-esbuild",
          "target": "esbuild",
          "type": "implicit"
        }
      ],
      "e2e-nx-init": [
        {
          "source": "e2e-nx-init",
          "target": "nx",
          "type": "implicit"
        },
        {
          "source": "e2e-nx-init",
          "target": "angular",
          "type": "implicit"
        },
        {
          "source": "e2e-nx-init",
          "target": "react",
          "type": "implicit"
        },
        {
          "source": "e2e-nx-init",
          "target": "js",
          "type": "implicit"
        },
        {
          "source": "e2e-nx-init",
          "target": "nest",
          "type": "implicit"
        },
        {
          "source": "e2e-nx-init",
          "target": "e2e-utils",
          "type": "static"
        }
      ],
      "e2e-release": [
        {
          "source": "e2e-release",
          "target": "nx",
          "type": "implicit"
        },
        {
          "source": "e2e-release",
          "target": "js",
          "type": "implicit"
        }
      ],
      "e2e-webpack": [
        {
          "source": "e2e-webpack",
          "target": "webpack",
          "type": "implicit"
        }
      ],
      "js": [
        {
          "source": "js",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "js",
          "target": "workspace",
          "type": "static"
        }
      ],
      "nx": [
        {
          "source": "nx",
          "target": "graph-client",
          "type": "implicit"
        },
        {
          "source": "nx",
          "target": "darwin-arm64",
          "type": "static"
        },
        {
          "source": "nx",
          "target": "darwin-x64",
          "type": "static"
        },
        {
          "source": "nx",
          "target": "freebsd-x64",
          "type": "static"
        },
        {
          "source": "nx",
          "target": "linux-arm-gnueabihf",
          "type": "static"
        },
        {
          "source": "nx",
          "target": "linux-arm64-gnu",
          "type": "static"
        },
        {
          "source": "nx",
          "target": "linux-arm64-musl",
          "type": "static"
        },
        {
          "source": "nx",
          "target": "linux-x64-gnu",
          "type": "static"
        },
        {
          "source": "nx",
          "target": "linux-x64-musl",
          "type": "static"
        },
        {
          "source": "nx",
          "target": "win32-arm64-msvc",
          "type": "static"
        },
        {
          "source": "nx",
          "target": "win32-x64-msvc",
          "type": "static"
        }
      ],
      "e2e-eslint": [
        {
          "source": "e2e-eslint",
          "target": "eslint",
          "type": "implicit"
        }
      ],
      "e2e-gradle": [
        {
          "source": "e2e-gradle",
          "target": "gradle",
          "type": "implicit"
        }
      ],
      "e2e-plugin": [
        {
          "source": "e2e-plugin",
          "target": "create-nx-plugin",
          "type": "implicit"
        }
      ],
      "e2e-rollup": [
        {
          "source": "e2e-rollup",
          "target": "rollup",
          "type": "implicit"
        },
        {
          "source": "e2e-rollup",
          "target": "js",
          "type": "implicit"
        }
      ],
      "e2e-rspack": [
        {
          "source": "e2e-rspack",
          "target": "rspack",
          "type": "implicit"
        }
      ],
      "e2e-detox": [
        {
          "source": "e2e-detox",
          "target": "detox",
          "type": "implicit"
        },
        {
          "source": "e2e-detox",
          "target": "e2e-utils",
          "type": "static"
        }
      ],
      "e2e-react": [
        {
          "source": "e2e-react",
          "target": "react",
          "type": "implicit"
        },
        {
          "source": "e2e-react",
          "target": "rspack",
          "type": "implicit"
        },
        {
          "source": "e2e-react",
          "target": "e2e-utils",
          "type": "static"
        }
      ],
      "e2e-remix": [
        {
          "source": "e2e-remix",
          "target": "remix",
          "type": "implicit"
        }
      ],
      "e2e-utils": [
        {
          "source": "e2e-utils",
          "target": "nx",
          "type": "static"
        }
      ],
      "e2e-expo": [
        {
          "source": "e2e-expo",
          "target": "expo",
          "type": "implicit"
        },
        {
          "source": "e2e-expo",
          "target": "e2e-utils",
          "type": "static"
        }
      ],
      "e2e-jest": [
        {
          "source": "e2e-jest",
          "target": "jest",
          "type": "implicit"
        }
      ],
      "e2e-next": [
        {
          "source": "e2e-next",
          "target": "next",
          "type": "implicit"
        },
        {
          "source": "e2e-next",
          "target": "e2e-utils",
          "type": "static"
        }
      ],
      "e2e-node": [
        {
          "source": "e2e-node",
          "target": "node",
          "type": "implicit"
        },
        {
          "source": "e2e-node",
          "target": "nest",
          "type": "implicit"
        },
        {
          "source": "e2e-node",
          "target": "webpack",
          "type": "implicit"
        }
      ],
      "e2e-nuxt": [
        {
          "source": "e2e-nuxt",
          "target": "nuxt",
          "type": "implicit"
        }
      ],
      "e2e-vite": [
        {
          "source": "e2e-vite",
          "target": "vite",
          "type": "implicit"
        }
      ],
      "e2e-vue": [
        {
          "source": "e2e-vue",
          "target": "vue",
          "type": "implicit"
        }
      ],
      "e2e-web": [
        {
          "source": "e2e-web",
          "target": "web",
          "type": "implicit"
        }
      ],
      "e2e-js": [
        {
          "source": "e2e-js",
          "target": "jest",
          "type": "implicit"
        },
        {
          "source": "e2e-js",
          "target": "e2e-utils",
          "type": "static"
        }
      ],
      "e2e-nx": [
        {
          "source": "e2e-nx",
          "target": "nx",
          "type": "implicit"
        },
        {
          "source": "e2e-nx",
          "target": "js",
          "type": "implicit"
        }
      ],
      "docs": [],
      "@nx/nx-source": [
        {
          "source": "@nx/nx-source",
          "target": "angular",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "cypress",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "devkit",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "esbuild",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "eslint",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "eslint-plugin",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "jest",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "js",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "next",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "playwright",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "react",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "rsbuild",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "rspack",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "storybook",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "vite",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "web",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "webpack",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "nx",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "nx-dev-models-package",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "nx-dev-feature-package-schema-viewer",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "nx-dev-data-access-packages",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "docs",
          "type": "static"
        },
        {
          "source": "@nx/nx-source",
          "target": "nx-dev",
          "type": "static"
        }
      ]
    }
  }
}
